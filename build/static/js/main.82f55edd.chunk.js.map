{"version":3,"sources":["config.js","serviceWorker.js","Utilities.js","Auth.js","Dashboard.js","StyledComponents.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","UserDetails","user","auth","useAuth","onClick","signOut","displayName","SignInForm","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","firebaseAuth","FirebaseAuthStateButton","style","position","bottom","right","useUser","div","layout","AuthButton","props","traceId","fallback","I","Flex","children","direction","wrap","bg","rest","display","background","flexDirection","flexWrap","flex","Box","fr","min","filter","cursor","align","justify","backgroundSize","alignItems","textAlign","justifyContent","minHeight","J","data","onEdit","collapsed","onAdd","onDelete","padding","fontSize","width","v","updated_src","src","theme","sortKeys","defaultValue","displayDataTypes","iconStyle","displayObjectSize","enableClipboard","groupArraysAfterLength","Json","JSON","stringify","name","User","id","db","useFirestore","userref","FieldValue","collection","doc","profile","useFirestoreDocData","update","set","merge","Accounts","query","where","uid","accounts","useFirestoreCollectionData","idField","Songs","accountId","songs","Journals","songId","journals","Layout","margin","h2","size","color","height","overflow","Dashboard","preloadData","firebaseApp","a","preloadUser","preloadFirestoreDoc","firestore","useFirebaseApp","Promise","all","preloadFirestore","setup","enablePersistence","preloadStorage","storage","setMaxUploadRetryTime","preloadAuth","preloadRemoteConfig","remoteConfig","settings","minimumFetchIntervalMillis","fetchTimeoutMillis","fetchAndActivate","preloadSDKs","rootElement","document","getElementById","ReactDOM","render","StrictMode","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.82f55edd.chunk.js","sourcesContent":["export const firebaseConfig = {\n  apiKey: \"AIzaSyDGfuA93mjwmcc3IuefEE3Q8tXdCetHtQA\",\n  authDomain: \"ioioioi.firebaseapp.com\",\n  databaseURL: \"https://ioioioi.firebaseio.com\",\n  projectId: \"ioioioi\",\n  storageBucket: \"ioioioi.appspot.com\",\n  messagingSenderId: \"759113465407\",\n  appId: \"1:759113465407:web:a4592efce4a96e2af9028a\",\n  measurementId: \"G-X507QH7VPV\"\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport matchSorter from \"match-sorter\";\nimport {\n  useFirestore,\n  useFirestoreDocData,\n  useFirestoreCollectionData\n} from \"reactfire\";\nexport const l = console.log;\nexport const useFilters = collection => {\n  let coll = React.useRef(collection);\n  let [newCollection, setNew] = React.useState(collection);\n\n  return [\n    newCollection,\n    {\n      getPrevious: () => {\n        return coll.current;\n      },\n\n      update: () => {\n        setNew(collection);\n        return newCollection;\n      },\n      sumBy: k => setNew(_.sumBy(newCollection, k)),\n      meanBy: k => setNew(_.meanBy(newCollection, k)),\n      maxBy: k => setNew(_.maxBy(newCollection, k)),\n      minBy: k => setNew(_.minBy(newCollection, k)),\n      countBy: k => setNew(_.countBy(newCollection, k)),\n      find: k => setNew(_.find(newCollection, k)),\n      clamp: (v, min, max) => setNew(_.clamp(v, min, max)),\n      round: (v, depth) => setNew(_.round(v, depth)),\n      groupBy: k => setNew(_.groupBy(newCollection, k)),\n      orderBy: keys => setNew(_.orderBy(collection, keys)),\n      pickBy: pred => setNew(_.pickBy(newCollection, pred)),\n      omitBy: pred => setNew(_.omitBy(newCollection, pred)),\n      toNumber: v => setNew(_.toNumber(v)),\n      zipObjectDeep: (arr1, arr2) => setNew(_.zipObjectDeep(arr1, arr2)),\n      search: (v, keys) =>\n        setNew(matchSorter(newCollection, v, { keys: keys })),\n      flow: arrayOfFns => setNew(_.flow(arrayOfFns)),\n      keys: k => setNew(_.keys(newCollection, k)),\n      values: k => setNew(_.valuesIn(newCollection, k)),\n      get: path => setNew(_.get(newCollection, path)),\n      mergeWith: (newO, customizer) =>\n        setNew(_.mergeWith(newCollection, newO, customizer)),\n      differenceBy: k => setNew(_.differenceBy(newCollection, k)),\n      join: arr => setNew(_.join(arr)),\n      unionBy: k => setNew(_.unionBy(newCollection, k)),\n      every: k => setNew(_.every(newCollection, k)),\n      includes: k => setNew(_.includes(newCollection, k)),\n      size: k => setNew(_.size(newCollection, k)),\n      log: () => console.log(newCollection)\n    }\n  ];\n};\nexport const useCollection = collection => {\n  const [results, setResults] = useState(collection);\n  const methods = {\n    removeDoc: id =>\n      collection\n        .doc(id)\n        .delete()\n        .then(doc => console.log(\"doc was deleted\"))\n        .catch(err => console.log(err)),\n    sumBy: k => setResults(_.sumBy(collection, k)),\n    meanBy: k => setResults(_.meanBy(collection, k)),\n    search: (v, keys) => setResults(matchSorter(collection, v, { keys: keys })),\n    maxBy: k => setResults(_.maxBy(collection, k)),\n    minBy: k => setResults(_.minBy(collection, k)),\n    countBy: k => setResults(_.countBy(collection, k)),\n    groupBy: k => setResults(_.groupBy(collection, k)),\n    orderBy: k => setResults(_.orderBy(collection, k)),\n    pickBy: k => setResults(_.pickBy(collection, k)),\n    some: k => setResults(_.some(collection, k)),\n    every: k => setResults(_.every(collection, k)),\n    includes: k => setResults(_.includes(collection, k)),\n    size: k => setResults(_.size(collection, k)),\n    omitBy: k => setResults(_.omitBy(collection, k)),\n    find: k => setResults(_.find(collection, k)),\n    filter: k => setResults(_.filter(collection, k)),\n    map: k => setResults(_.map(collection, k)),\n    log: () => console.log(collection)\n  };\n\n  return [collection, results, { ...methods }];\n};\nexport function useDoc(collectionID, docID) {\n  const db = useFirestore;\n  const docref = db()\n    .collection(collectionID)\n    .doc(docID);\n  const { fieldValue } = db;\n\n  const doc = useFirestoreDocData(docref);\n  const update = v => docref.update(v);\n  const add = v => docref.add(v);\n  const set = (v, merge = true) => docref.set(v, { merge });\n\n  const deleteField = v => docref.update({ [v]: fieldValue.delete() });\n  const addToArray = (v, k) => docref.update({ [k]: fieldValue.arrayUnion(v) });\n  const removeFromArray = (key, fieldsToRemove) =>\n    docref.update({ [key]: fieldValue.arrayRemove(fieldsToRemove) });\n  const increment = (key, amount) =>\n    docref.update({ [key]: fieldValue.increment(amount) });\n  const has = k => _.has(doc, k);\n  const keys = () => _.keys(doc);\n  const values = () => _.values(doc);\n  return [\n    doc,\n    {\n      add,\n      has,\n      set,\n      keys,\n      values,\n      deleteField,\n      update,\n      removeFromArray,\n      addToArray,\n      increment\n    }\n  ];\n}\n///\n\nexport const getUniqueObjectFields = (newO, prevO) =>\n  _.pickBy(newO, (v, k) => !_.isEqual(prevO[k], v));\n","import React from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { SuspenseWithPerf, useUser, useAuth } from \"reactfire\";\nimport { motion } from \"framer-motion\";\nconst signOut = auth => auth.signOut().then(() => console.log(\"signed out\"));\n\nconst UserDetails = ({ user }) => {\n  const auth = useAuth();\n\n  return (\n    <>\n      <button onClick={() => signOut(auth)}>Sign Out {user.displayName}</button>\n    </>\n  );\n};\n\nconst SignInForm = () => {\n  const auth = useAuth;\n\n  const uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [auth.GoogleAuthProvider.PROVIDER_ID],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  return <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth()} />;\n};\n\nconst FirebaseAuthStateButton = ({\n  style = {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0\n  }\n}) => {\n  const user = useUser();\n  return (\n    <motion.div layout style={style}>\n      {user ? <UserDetails user={user} /> : <SignInForm />}\n    </motion.div>\n  );\n};\n\nconst AuthButton = props => {\n  return (\n    <SuspenseWithPerf\n      traceId={\"firebase-user-wait\"}\n      fallback={<p>loading...</p>}\n    >\n      <FirebaseAuthStateButton />\n    </SuspenseWithPerf>\n  );\n};\n\nexport default AuthButton;\n","import React, { useState } from \"react\";\nimport {\n  useFirestore,\n  SuspenseWithPerf,\n  useUser,\n  useFirestoreDocData,\n  useFirestoreCollectionData\n} from \"reactfire\";\nimport * as I from \"react-icons/fi\";\nimport * as C from \"./StyledComponents\";\nimport { Page } from \"framer\";\nimport { Frame } from \"framer\";\nimport { useCollection, l } from \"./Utilities\";\nimport LoginBtn from \"./Auth\";\nimport {\n  motion,\n  useSpring,\n  AnimateSharedLayout,\n  AnimatePresence\n} from \"framer-motion\";\nconst { FiPlusCircle: Plus } = I;\nconst { Flex, Box, J } = C;\nconst { stringify: st } = JSON;\nconst Json = ({ name, data, ...rest }) => {\n  return (\n    <>\n      <h2>{name}</h2>\n      <J src={data} {...rest} />\n    </>\n  );\n};\n//User\nconst User = ({ id }) => {\n  const db = useFirestore();\n  const { FieldValue } = useFirestore;\n  const userref = db.collection(\"users\").doc(id);\n  const profile = useFirestoreDocData(userref);\n  const update = v => userref.set(v, { merge: true });\n  const remove = v => userref.set(v);\n\n  return (\n    <Json\n      name=\"User\"\n      data={profile}\n      onAdd={update}\n      onDelete={remove}\n      onEdit={update}\n    />\n  );\n};\n//Accounts\nconst Accounts = () => {\n  const db = useFirestore();\n  const user = useUser();\n  const query = db\n    .collection(\"accounts\")\n    .where(\"admins\", \"array-contains\", user.uid);\n  const accounts = useFirestoreCollectionData(query, { idField: \"id\" });\n  return <Json name=\"Accounts\" data={accounts} />;\n};\n\n///Songs\nconst Songs = ({ accountId = \"1\" }) => {\n  const db = useFirestore();\n  const query = db\n    .collection(\"songs\")\n    .where(\"interestedParties\", \"array-contains\", accountId);\n  const songs = useFirestoreCollectionData(query);\n  return <Json name=\"Songs\" data={songs} />;\n};\n\n///Journals\nconst Journals = ({ songId = \"1\" }) => {\n  const db = useFirestore();\n  const query = db\n    .collection(\"songs\")\n    .doc(songId)\n    .collection(\"journals\");\n  const journals = useFirestoreCollectionData(query);\n  return <Json name=\"Journals for Song #1\" data={journals} />;\n};\n\n///\nfunction Layout() {\n  const user = useUser();\n  return (\n    <Flex direction=\"column\" style={{ minHeight: \"100vh\" }}>\n      <Box fr={0} min=\"80px\">\n        <Box style={{ margin: \"24px\" }} justify=\"flex-start\">\n          <motion.h2 layout> WMG</motion.h2>\n        </Box>\n\n        <Box fr={0} min=\"auto\" cursor=\"pointer\">\n          <I.FiMenu style={{ margin: \"24px\" }} size=\"23px\" color=\"#000\" />\n        </Box>\n      </Box>\n      <Box\n        bg=\"lightgray\"\n        direction=\"column\"\n        style={{ height: \"auto\", overflow: \"scroll\" }}\n      >\n        <User id={user.uid} />\n        <Accounts />\n        <Songs />\n        <Journals />\n      </Box>\n      <Box bg=\"primary\" fr={0} min=\"80px\" />\n    </Flex>\n  );\n}\nexport function Dashboard() {\n  return (\n    <>\n      <SuspenseWithPerf fallback={\"loading\"} traceId={\"hello\"}>\n        <LoginBtn />\n        <Layout />\n      </SuspenseWithPerf>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport \"./styles.css\";\nimport ReactJson from \"react-json-view\";\nimport { ChromePicker } from \"react-color\";\nimport _ from \"lodash\";\nexport const Flex = ({\n  children,\n  style,\n  direction = \"row\",\n  wrap = \"wrap\",\n  bg = \"rgba(0,0,0,0)\",\n  ...rest\n}) => (\n  <motion.div\n    layout\n    style={{\n      display: \"flex\",\n      background: bg === \"primary\" ? \"#DC3F32\" : bg,\n      flexDirection: direction,\n      flexWrap: wrap,\n      flex: \"1 0 200px\",\n      ...style\n    }}\n    {...rest}\n  >\n    {children}\n  </motion.div>\n);\n\nexport const Box = ({\n  fr = 1,\n  direction = \"row\",\n  min = \"100px\",\n  filter = \"initial\",\n  bg = \"rgba(0,0,0,0)\",\n  style,\n  cursor = \"initial\",\n  align = \"center\",\n  justify,\n  children,\n  wrap = \"initial\",\n  ...rest\n}) => (\n  <motion.div\n    layout\n    style={{\n      display: \"flex\",\n      cursor: cursor,\n      filter: filter,\n      backgroundSize: \"cover\",\n      flexDirection: direction,\n      flexWrap: wrap,\n      alignItems: align,\n      textAlign: \"center\",\n      justifyContent: justify,\n      background: bg === \"primary\" ? \"#DC3F32\" : bg,\n      minHeight: \"40px\",\n      flex: `${fr} 0 ${min}`,\n      ...style\n    }}\n    {...rest}\n  >\n    {children}\n  </motion.div>\n);\nexport function ColorPicker({ showColor = true }) {\n  const [color, setColor] = React.useState({\n    hsl: { h: 200, s: 0.6, l: 0.5, a: 1 }\n  });\n  return (\n    <>\n      <motion.div animate style={{ width: \"50vw\" }}>\n        {showColor && (\n          <ChromePicker\n            color={color.hsl}\n            onChange={color => {\n              setColor(color);\n            }}\n          />\n        )}\n      </motion.div>\n    </>\n  );\n}\n\nexport const FadeInOut = ({ isVisible, children }) => (\n  <AnimatePresence>\n    {isVisible && (\n      <motion.div\n        key=\"modal\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      >\n        {children}\n      </motion.div>\n    )}\n  </AnimatePresence>\n);\nexport function J({\n  data,\n  onEdit,\n  collapsed = 2,\n  onAdd,\n  onDelete,\n  style,\n  ...rest\n}) {\n  return (\n    <ReactJson\n      style={{\n        padding: \"20px\",\n        fontSize: \".8em\",\n        textAlign: \"left\",\n        width: \"100%\",\n        ...style\n      }}\n      onAdd={v => onAdd(v.updated_src)}\n      onEdit={v => console.log(v.updated_src)}\n      src={data}\n      theme=\"eighties\"\n      sortKeys={true}\n      onDelete={v => onDelete(v.updated_src)}\n      defaultValue=\"\"\n      // onSelect={v => console.log({ [v.name]: v.new_value })}\n      collapsed={collapsed}\n      displayDataTypes={true}\n      iconStyle=\"circle\"\n      displayObjectSize={false}\n      enableClipboard={true}\n      groupArraysAfterLength={5}\n      {...rest}\n    />\n  );\n}\n","import React from \"react\";\nimport { preloadFirestore } from \"reactfire\";\nimport {\n  preloadFirestoreDoc,\n  useFirebaseApp,\n  preloadUser,\n  preloadAuth,\n  SuspenseWithPerf,\n  preloadDatabase,\n  preloadStorage,\n  preloadRemoteConfig\n} from \"reactfire\";\nimport { Dashboard } from \"./Dashboard\";\n\n// Our components will lazy load the\n// SDKs to decrease their bundle size.\n// Since we know that, we can start\n// fetching them now\nconst preloadSDKs = firebaseApp => {\n  return Promise.all([\n    preloadFirestore({\n      firebaseApp,\n      setup(firestore) {\n        return firestore().enablePersistence();\n      }\n    }),\n    preloadStorage({\n      firebaseApp,\n      setup(storage) {\n        return storage().setMaxUploadRetryTime(10000);\n      }\n    }),\n    preloadAuth({ firebaseApp }),\n    preloadRemoteConfig({\n      firebaseApp,\n      setup(remoteConfig) {\n        remoteConfig().settings = {\n          minimumFetchIntervalMillis: 10000,\n          fetchTimeoutMillis: 10000\n        };\n        return remoteConfig().fetchAndActivate();\n      }\n    })\n  ]);\n};\n\nconst preloadData = async firebaseApp => {\n  const user = await preloadUser(firebaseApp);\n\n  if (user) {\n    preloadFirestoreDoc(\n      firestore => firestore.doc(\"styles/dashboard\"),\n      firebaseApp\n    );\n  }\n};\n\nexport default () => {\n  const firebaseApp = useFirebaseApp();\n\n  // Kick off fetches for SDKs and data that\n  // we know our components will eventually need.\n  //\n  // This is OPTIONAL but encouraged as part of the render-as-you-fetch pattern\n  // https://reactjs.org/docs/concurrent-mode-suspense.html#approach-3-render-as-you-fetch-using-suspense\n  preloadSDKs(firebaseApp).then(preloadData(firebaseApp));\n\n  return (\n    <SuspenseWithPerf fallback={\"loading\"} traceId={\"main-app\"}>\n      <Dashboard />\n    </SuspenseWithPerf>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { FirebaseAppProvider, SuspenseWithPerf } from \"reactfire\";\nimport { firebaseConfig } from \"./config\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n      <App />\n    </FirebaseAppProvider>\n  </React.StrictMode>,\n  rootElement\n);\nserviceWorker.register();\n"],"sourceRoot":""}