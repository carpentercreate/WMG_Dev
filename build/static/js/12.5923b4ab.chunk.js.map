{"version":3,"sources":["../node_modules/@firebase/storage/dist/index.esm.js"],"names":["FirebaseStorageError","code","message","this","code_","prependCode","message_","serverResponse_","name_","prototype","codeProp","codeEquals","serverResponseProp","setServerResponseProp","serverResponse","Object","defineProperty","get","enumerable","configurable","Code","unknown","cannotSliceBlob","noDownloadURL","invalidArgument","index","fnName","appDeleted","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataUrl","parts","DataURLParts","base64","rest","value","decoded","decodeURIComponent","e","percentEncodedBytes_","dataURLBytes_","b","i","length","c","charCodeAt","push","Uint8Array","hasMinus","indexOf","hasUnder","hasPlus","hasSlash","replace","bytes","atob","array","dataURL","matches","match","middle","s","end","substring","ErrorCode","TaskEvent","STATE_CHANGED","InternalTaskState","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","state","isDef","p","isJustDef","isFunction","isObject","isNonNullObject","isString","String","isInteger","isNumber","Number","isNativeBlob","isNativeBlobDefined","Blob","NetworkXhrIo","_this","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","url","method","body","headers","open","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","args","_i","arguments","undefined","bb","append","Error","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","set","size_","type_","slice","startByte","endByte","sliced","blob","start","webkitSlice","mozSlice","sliceBlob","buffer","blobby","map","val","apply","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","Location","bucket","path","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","gsRegex","RegExp","httpModify","loc","firebaseStorageHost","groups","regex","indices","postModify","charAt","group","captures","exec","bucketValue","pathValue","invalidUrl","jsonObjectOrNull","obj","JSON","parse","Array","isArray","child","childPath","canonicalChildPath","split","filter","component","join","lastComponent","lastIndexOf","makeUrl","urlPart","makeQueryString","params","queryPart","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","fromResource","service","resource","len","mapping","makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","stringify","metadataValidator","fromResponseString","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromBackendResponse","listOptionsValidator","RequestInfo","handler","timeout","urlParams","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","tokens","token","alt","downloadUrlFromResourceString","sharedErrorHandler","err","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","list","delimiter","pageToken","maxResults","isRoot","listHandler","getDownloadUrl","updateMetadata","deleteObject","_xhr","_text","metadataForUpload_","metadataClone","assign","determineContentType_","ResumableUploadStatus","current","total","finalized","checkResumeHeader_","allowed","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","Math","min","maxUploadRetryTime","uploadStatus","newCurrent","Observer","nextOrObserver","error","complete","next","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","ref","validate","name","specs","passed","minArgs","maxArgs","optional","argMin","argMax","real","countPart","plural","invalidArgumentCount","validator","ArgSpec","self","stringSpec","stringValidator","chainedValidator","v1","v2","uploadDataSpec","metadataSpec","listOptionSpec","nonNegativeNumberSpec","looseObjectSpec","nullFunctionSpec","f","argsToForward","then","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","ref_","service_","location_","blob_","metadata_","resumable_","shouldDoResumable_","state_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","reject","start_","makeProgressCallback_","sizeBefore","loaded","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","callback","getAuthToken","authToken","metadataForUpload","createResumableUpload","createRequest","makeRequest","getPromise","sizeString","isNaN","getResumableUploadStatus","statusRequest","uploadRequest","newStatus","increaseMultiplier_","metadataRequest","boundary","str","random","genBoundary","preBlobPart","postBlobPart","multipartUpload","multipartRequest","transferred","old","notifyObservers_","cancel","wasPaused","externalState","on","completed","typeValidator","nextOrObserverMessage","nextValidator","observerValidator","nextOrObserverValidator","makeBinder","addObserver_","removeObserver_","binderNextOrObserverValidator","binderSpecs","typeOnly","onFulfilled","onRejected","catch","notifyObserver_","splice","finishPromise_","triggered","bind","snapshot","resume","valid","pause","Reference","newRef","newPath","put","throwIfRoot_","putString","delete","listAll","accumulator","listAllHelper","opt","nextPage","label","sent","options","op","getDownloadURL","invalidRootOperation","FailRequest","_appDelete","NetworkRequest","errorCallback","pool","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","backoffDone","requestWentThrough","wasSuccessCode","result","canceled","RequestEndStatus","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","call","waitMillis","mustStop","stopped","stop","wasTimeout","clearTimeout","backoffCallback","progressListener","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","lengthComputable","appDelete","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","appId","addGmpidHeader_","addAuthHeader_","version","SDK_VERSION","addVersionHeader_","StorageService","app","authProvider","bucket_","appId_","deleted_","app_","authProvider_","maxOperationRetryTime_","maxUploadRetryTime_","requests_","Set","extractBucket_","internals_","ServiceInternals","config","auth","tokenData","getImmediate","getToken","accessToken","deleteApp","request","clear","request_1","add","test","refFromURL","setMaxUploadRetryTime","time","setMaxOperationRetryTime","factory","container","getProvider","instance","namespaceExports","Storage","INTERNAL","registerComponent","setServiceProps","setMultipleInstances","registerVersion","registerStorage"],"mappings":"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","file":"static/js/12.5923b4ab.chunk.js","sourcesContent":["import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar FirebaseStorageError =\n/** @class */\nfunction () {\n  function FirebaseStorageError(code, message) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  FirebaseStorageError.prototype.codeProp = function () {\n    return this.code;\n  };\n\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.codeProp();\n  };\n\n  FirebaseStorageError.prototype.serverResponseProp = function () {\n    return this.serverResponse_;\n  };\n\n  FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n    this.serverResponse_ = serverResponse;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n    get: function get() {\n      return this.name_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n    get: function get() {\n      return this.code_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function get() {\n      if (this.serverResponse_) {\n        return this.message_ + '\\n' + this.serverResponse_;\n      } else {\n        return this.message_;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function get() {\n      return this.serverResponse_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}();\n\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(index, fnName, message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\n\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n  var countPart;\n  var plural;\n\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nfunction formatValidator(stringFormat) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n\n    default:\n      throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n/**\r\n * @struct\r\n */\n\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\n\n\nfunction isDef(p) {\n  return p != null;\n}\n\nfunction isJustDef(p) {\n  return p !== void 0;\n}\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isObject(p) {\n  return typeof p === 'object';\n}\n\nfunction isNonNullObject(p) {\n  return isObject(p) && p !== null;\n}\n\nfunction isNonArrayObject(p) {\n  return isObject(p) && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isInteger(p) {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nfunction isNumber(p) {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @enum{number}\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\n\n\nvar NetworkXhrIo =\n/** @class */\nfunction () {\n  function NetworkXhrIo() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (isDef(headers)) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return NetworkXhrIo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar XhrIoPool =\n/** @class */\nfunction () {\n  function XhrIoPool() {}\n\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n\n  return XhrIoPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function get() {\n      return this.path_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function get() {\n      return this.path.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n/**\r\n * @struct\r\n */\n\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service.makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, service);\n  return metadata;\n}\n\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n\nfunction metadataValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n\n  for (var key in p) {\n    if (p.hasOwnProperty(key)) {\n      var val = p[key];\n\n      if (key === 'customMetadata') {\n        if (!isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_RESULTS_KEY = 'maxResults';\nvar MAX_MAX_RESULTS = 1000;\nvar PAGE_TOKEN_KEY = 'pageToken';\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = service.makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\n\nfunction listOptionsValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n\n  for (var key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (!isInteger(p[MAX_RESULTS_KEY]) || p[MAX_RESULTS_KEY] <= 0) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n\n      if (p[MAX_RESULTS_KEY] > 1000) {\n        throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || isDef(error) || isDef(complete);\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n\n  return Observer;\n}();\n\nvar UploadTaskSnapshot =\n/** @class */\nfunction () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  return UploadTaskSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\n\n\nfunction validate(name, specs, passed) {\n  var minArgs = specs.length;\n  var maxArgs = specs.length;\n\n  for (var i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n\n  var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n\n  if (!validLength) {\n    throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n  }\n\n  for (var i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw invalidArgument(i, name, e.message);\n      } else {\n        throw invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar ArgSpec =\n/** @class */\nfunction () {\n  function ArgSpec(validator, optional) {\n    var self = this;\n\n    this.validator = function (p) {\n      if (self.optional && !isJustDef(p)) {\n        return;\n      }\n\n      validator(p);\n    };\n\n    this.optional = !!optional;\n  }\n\n  return ArgSpec;\n}();\n\nfunction and_(v1, v2) {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nfunction stringSpec(validator, optional) {\n  function stringValidator(p) {\n    if (!isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n\n  var chainedValidator;\n\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n\n  return new ArgSpec(chainedValidator, optional);\n}\n\nfunction uploadDataSpec() {\n  function validator(p) {\n    var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;\n\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction metadataSpec(optional) {\n  return new ArgSpec(metadataValidator, optional);\n}\n\nfunction listOptionSpec(optional) {\n  return new ArgSpec(listOptionsValidator, optional);\n}\n\nfunction nonNegativeNumberSpec() {\n  function validator(p) {\n    var valid = isNumber(p) && p >= 0;\n\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction looseObjectSpec(validator, optional) {\n  function isLooseObjectValidator(p) {\n    var isLooseObject = p === null || isDef(p) && p instanceof Object;\n\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\n\nfunction nullFunctionSpec(optional) {\n  function validator(p) {\n    var valid = p === null || isFunction(p);\n\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n\n  return new ArgSpec(validator, optional);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob The blob to upload.\r\n   */\n  function UploadTask(ref, service, location, mappings, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    this.transferred_ = 0;\n    this.needToFetchStatus_ = false;\n    this.needToFetchMetadata_ = false;\n    this.observers_ = [];\n    this.error_ = null;\n    this.uploadUrl_ = null;\n    this.request_ = null;\n    this.chunkMultiplier_ = 1;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.ref_ = ref;\n    this.service_ = service;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n\n    this.errorHandler_ = function (error) {\n      _this.request_ = null;\n      _this.chunkMultiplier_ = 1;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.needToFetchStatus_ = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.metadataErrorHandler_ = function (error) {\n      _this.request_ = null;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this.promise_.then(null, function () {});\n  }\n\n  UploadTask.prototype.makeProgressCallback_ = function () {\n    var _this = this;\n\n    var sizeBefore = this.transferred_;\n    return function (loaded) {\n      return _this.updateProgress_(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype.shouldDoResumable_ = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype.start_ = function () {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this.request_ !== null) {\n      return;\n    }\n\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  };\n\n  UploadTask.prototype.resolveToken_ = function (callback) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    this.service_.getAuthToken().then(function (authToken) {\n      switch (_this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n\n        case InternalTaskState.CANCELING:\n          _this.transition_(InternalTaskState.CANCELED);\n\n          break;\n\n        case InternalTaskState.PAUSING:\n          _this.transition_(InternalTaskState.PAUSED);\n\n          break;\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype.createResumable_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = createResumableUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var createRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this.request_ = null;\n        _this.uploadUrl_ = url;\n        _this.needToFetchStatus_ = false;\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.fetchStatus_ = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this.service_, _this.location_, url, _this.blob_);\n\n      var statusRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this.request_ = null;\n\n        _this.updateProgress_(status.current);\n\n        _this.needToFetchStatus_ = false;\n\n        if (status.finalized) {\n          _this.needToFetchMetadata_ = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.continueUpload_ = function () {\n    var _this = this;\n\n    var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    var status = new ResumableUploadStatus(this.transferred_, this.blob_.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this.location_, _this.service_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n      } catch (e) {\n        _this.error_ = e;\n\n        _this.transition_(InternalTaskState.ERROR);\n\n        return;\n      }\n\n      var uploadRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this.increaseMultiplier_();\n\n        _this.request_ = null;\n\n        _this.updateProgress_(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this.metadata_ = newStatus.metadata;\n\n          _this.transition_(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.increaseMultiplier_ = function () {\n    var currentSize = resumableUploadChunkSize * this.chunkMultiplier_; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  };\n\n  UploadTask.prototype.fetchMetadata_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getMetadata(_this.service_, _this.location_, _this.mappings_);\n\n      var metadataRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.metadataErrorHandler_);\n    });\n  };\n\n  UploadTask.prototype.oneShotUpload_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = multipartUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var multipartRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.updateProgress_(_this.blob_.size());\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.updateProgress_ = function (transferred) {\n    var old = this.transferred_;\n    this.transferred_ = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  };\n\n  UploadTask.prototype.transition_ = function (state) {\n    if (this.state_ === state) {\n      return;\n    }\n\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function get() {\n      var externalState = taskStateFromInternalTaskState(this.state_);\n      return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type The type of event to listen for.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    function typeValidator() {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\n      }\n    }\n\n    var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n    var nextValidator = nullFunctionSpec(true).validator;\n    var observerValidator = looseObjectSpec(null, true).validator; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    function nextOrObserverValidator(p) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n\n      try {\n        observerValidator(p);\n        var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);\n\n        if (!anyDefined) {\n          throw '';\n        }\n\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n\n    var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];\n    validate('on', specs, arguments);\n    var self = this;\n\n    function makeBinder(specs) {\n      function binder(nextOrObserver, error, complete) {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n\n        var observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return function () {\n          self.removeObserver_(observer);\n        };\n      }\n\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n\n      nextOrObserverValidator(p);\n    }\n\n    var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];\n    var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));\n\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype.addObserver_ = function (observer) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype.removeObserver_ = function (observer) {\n    var i = this.observers_.indexOf(observer);\n\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype.notifyObservers_ = function () {\n    var _this = this;\n\n    this.finishPromise_();\n    var observers = this.observers_.slice();\n    observers.forEach(function (observer) {\n      _this.notifyObserver_(observer);\n    });\n  };\n\n  UploadTask.prototype.finishPromise_ = function () {\n    if (this.resolve_ !== null) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          async(this.resolve_.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this.reject_;\n          async(toCall.bind(null, this.error_))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  };\n\n  UploadTask.prototype.notifyObserver_ = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this.state_);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    validate('resume', [], arguments);\n    var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    validate('pause', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    validate('cancel', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(service, location) {\n    this.service = service;\n\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @return The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  };\n\n  Reference.prototype.newRef = function (service, location) {\n    return new Reference(service, location);\n  };\n\n  Reference.prototype.mappings = function () {\n    return getMappings();\n  };\n  /**\r\n   * @return A reference to the object obtained by\r\n   *     appending childPath, removing any duplicate, beginning, or trailing\r\n   *     slashes.\r\n   */\n\n\n  Reference.prototype.child = function (childPath) {\n    validate('child', [stringSpec()], arguments);\n    var newPath = child(this.location.path, childPath);\n    var location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.service, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * @return A reference to the parent of the\r\n     *     current object, or null if the current object is the root.\r\n     */\n    get: function get() {\n      var newPath = parent(this.location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this.location.bucket, newPath);\n      return this.newRef(this.service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @return An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function get() {\n      var location = new Location(this.location.bucket, '');\n      return this.newRef(this.service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function get() {\n      return this.location.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function get() {\n      return this.location.path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function get() {\n      return lastComponent(this.location.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function get() {\n      return this.service;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data The blob to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n  Reference.prototype.put = function (data, metadata) {\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data), metadata);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value The string to upload.\r\n   * @param format The format of the string to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n\n  Reference.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\n    this.throwIfRoot_('putString');\n    var data = dataFromString(format, value);\n    var metadataClone = Object.assign({}, metadata);\n\n    if (!isDef(metadataClone['contentType']) && isDef(data.contentType)) {\n      metadataClone['contentType'] = data.contentType;\n    }\n\n    return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @return A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  Reference.prototype.delete = function () {\n    var _this = this;\n\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = deleteObject(_this.service, _this.location);\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @return A Promise that resolves with all the items and prefixes under\r\n   *      the current storage reference. `prefixes` contains references to\r\n   *      sub-directories and `items` contains references to objects in this\r\n   *      folder. `nextPageToken` is never returned.\r\n   */\n\n\n  Reference.prototype.listAll = function () {\n    validate('listAll', [], arguments);\n    var accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(function () {\n      return accumulator;\n    });\n  };\n\n  Reference.prototype.listAllHelper = function (accumulator, pageToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      var opt, nextPage;\n\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            opt = {\n              // maxResults is 1000 by default.\n              pageToken: pageToken\n            };\n            return [4\n            /*yield*/\n            , this.list(opt)];\n\n          case 1:\n            nextPage = _c.sent();\n\n            (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n            (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n            if (!(nextPage.nextPageToken != null)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.listAllHelper(accumulator, nextPage.nextPageToken)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure.\r\n   * Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options See ListOptions for details.\r\n   * @return A Promise that resolves with the items and prefixes.\r\n   *      `prefixes` contains references to sub-folders and `items`\r\n   *      contains references to objects in this folder. `nextPageToken`\r\n   *      can be used to get the rest of the results.\r\n   */\n\n\n  Reference.prototype.list = function (options) {\n    validate('list', [listOptionSpec(true)], arguments);\n    var self = this;\n    return this.service.getAuthToken().then(function (authToken) {\n      var op = options || {};\n      var requestInfo = list(self.service, self.location,\n      /*delimiter= */\n      '/', op.pageToken, op.maxResults);\n      return self.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   *     A promise that resolves with the metadata for this object. If this\r\n   *     object doesn't exist or metadata cannot be retreived, the promise is\r\n   *     rejected.\r\n   */\n\n\n  Reference.prototype.getMetadata = function () {\n    var _this = this;\n\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = getMetadata(_this.service, _this.location, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata The new metadata for the object.\r\n   *     Only values that have been explicitly set will be changed. Explicitly\r\n   *     setting a value to null will remove the metadata.\r\n   * @return A promise that resolves\r\n   *     with the new metadata for this object.\r\n   *     @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  Reference.prototype.updateMetadata = function (metadata) {\n    var _this = this;\n\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = updateMetadata(_this.service, _this.location, metadata, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * @return A promise that resolves with the download\r\n   *     URL for this object.\r\n   */\n\n\n  Reference.prototype.getDownloadURL = function () {\n    var _this = this;\n\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = getDownloadUrl(_this.service, _this.location, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n        if (url === null) {\n          throw noDownloadURL();\n        }\n\n        return url;\n      });\n    });\n  };\n\n  Reference.prototype.throwIfRoot_ = function (name) {\n    if (this.location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, callback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false; // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  } // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n * @template T\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers) {\n  var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n/**\r\n * @template T\r\n */\n\n\nfunction makeRequest(requestInfo, appId, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\n\n\nvar StorageService =\n/** @class */\nfunction () {\n  function StorageService(app, authProvider, pool, url) {\n    var _a;\n\n    this.bucket_ = null;\n    this.appId_ = null;\n    this.deleted_ = false;\n    this.app_ = app;\n    this.authProvider_ = authProvider;\n    this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requests_ = new Set();\n    this.pool_ = pool;\n\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      this.bucket_ = StorageService.extractBucket_((_a = this.app_) === null || _a === void 0 ? void 0 : _a.options);\n    }\n\n    this.internals_ = new ServiceInternals(this);\n  }\n\n  StorageService.extractBucket_ = function (config) {\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n\n    if (bucketString == null) {\n      return null;\n    }\n\n    return Location.makeFromBucketSpec(bucketString);\n  };\n\n  StorageService.prototype.getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var auth, tokenData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            auth = this.authProvider_.getImmediate({\n              optional: true\n            });\n            if (!auth) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , auth.getToken()];\n\n          case 1:\n            tokenData = _a.sent();\n\n            if (tokenData !== null) {\n              return [2\n              /*return*/\n              , tokenData.accessToken];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  StorageService.prototype.deleteApp = function () {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requests_.forEach(function (request) {\n      return request.cancel();\n    });\n    this.requests_.clear();\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   * @param loc The Location.\r\n   * @return A firebaseStorage.Reference.\r\n   */\n\n\n  StorageService.prototype.makeStorageReference = function (loc) {\n    return new Reference(this, loc);\n  };\n\n  StorageService.prototype.makeRequest = function (requestInfo, authToken) {\n    var _this = this;\n\n    if (!this.deleted_) {\n      var request_1 = makeRequest(requestInfo, this.appId_, authToken, this.pool_);\n      this.requests_.add(request_1); // Request removes itself from set when complete.\n\n      request_1.getPromise().then(function () {\n        return _this.requests_.delete(request_1);\n      }, function () {\n        return _this.requests_.delete(request_1);\n      });\n      return request_1;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n\n  StorageService.prototype.ref = function (path) {\n    function validator(path) {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n\n    validate('ref', [stringSpec(validator, true)], arguments);\n\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    var ref = new Reference(this, this.bucket_);\n\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  StorageService.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n\n    validate('refFromURL', [stringSpec(validator, false)], arguments);\n    return new Reference(this, url);\n  };\n\n  Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\n    get: function get() {\n      return this.maxUploadRetryTime_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StorageService.prototype.setMaxUploadRetryTime = function (time) {\n    validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.maxUploadRetryTime_ = time;\n  };\n\n  Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\n    get: function get() {\n      return this.maxOperationRetryTime_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StorageService.prototype.setMaxOperationRetryTime = function (time) {\n    validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.maxOperationRetryTime_ = time;\n  };\n\n  Object.defineProperty(StorageService.prototype, \"app\", {\n    get: function get() {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageService.prototype, \"INTERNAL\", {\n    get: function get() {\n      return this.internals_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return StorageService;\n}();\n/**\r\n * @struct\r\n */\n\n\nvar ServiceInternals =\n/** @class */\nfunction () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\r\n   * Called when the associated app is deleted.\r\n   */\n\n\n  ServiceInternals.prototype.delete = function () {\n    this.service_.deleteApp();\n    return Promise.resolve();\n  };\n\n  return ServiceInternals;\n}();\n\nvar name = \"@firebase/storage\";\nvar version = \"0.3.41\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(container, url) {\n  // Dependencies\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal');\n  return new StorageService(app, authProvider, new XhrIoPool(), url);\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: StorageService,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };"],"sourceRoot":""}