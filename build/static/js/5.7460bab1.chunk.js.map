{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/@firebase/database/dist/index.cjs.js","../node_modules/firebase/database/dist/index.esm.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","Object","defineProperty","value","ex","firebase","tslib","util","logger$1","component","DOMStorageWrapper","domStorage_","prefix_","set","key","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","message","arg","isArray","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spread","error","fatal","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","sort","splitStringBySize","segsize","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","stack","setTimeoutNonBlocking","time","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","path","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","RepoInfo","host","secure","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","domain","indexOf","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","location","protocol","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","e_1","_a","results","charAt","_b","__values","_c","next","done","segment","kv","e_1_1","return","decodeQuery","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","root","base12","buildPennant","chunkSize","low","high","childTree","buildBalancedTree","namedNode","middle","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","query","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","validateContextObject","valueCallback","removeEventCallbackForQuery","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","existing","unused","delta","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","delete","forEachTree","prefixPath","func","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","values","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","__read","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","write","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","code","reason","toUpperCase","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","href","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","CONSTANTS","NODE_ADMIN","options","headers","platform","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","p","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","Repo","forceRestClient","app","authTokenProvider","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","search","authOverride","appId","addTokenChangeListener","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","Promise","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","authProvider","isEmulator","dbEmulatorHost","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","__awaiter","__generator","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","_forceRestClient","registerDatabase","instance","setSDKVersion","registerComponent","Component","getProvider","setServiceProps","setMultipleInstances","registerVersion"],"mappings":"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","file":"static/js/5.7460bab1.chunk.js","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nvar tslib = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar logger$1 = require('@firebase/logger');\n\nvar component = require('@firebase/component');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\n\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param {string} key The key to save the value under\r\n   * @param {?Object} value The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   * @return {*} The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return util.jsonEval(storedVal);\n    }\n  };\n  /**\r\n   * @param {string} key\r\n   */\n\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n  /**\r\n   * @param {string} name\r\n   * @return {string}\r\n   */\n\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (util.contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new logger$1.Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = util.stringToByteArray(str);\n  var sha1 = new util.Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return util.base64.encodeByteArray(sha1Bytes);\n};\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\n\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += util.stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = logger$1.LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\n\n\nvar log = function log() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\n\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, tslib.__spread([prefix], varArgs));\n  };\n};\n/**\r\n * @param {...string} varArgs\r\n */\n\n\nvar error = function error() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\n  logClient.error(message);\n};\n/**\r\n * @param {...string} varArgs\r\n */\n\n\nvar fatal = function fatal() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\n  logClient.error(message);\n  throw new Error(message);\n};\n/**\r\n * @param {...*} varArgs\r\n */\n\n\nvar warn = function warn() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n/**\r\n * @param {function()} fn\r\n */\n\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (util.isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\n\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\n  }\n};\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\n\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return util.stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += util.stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\n\n\nvar errorForServerCode = function errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n};\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= -2147483648 && intVal <= 2147483647) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string|Array.<string>} pathOrString Path string to parse,\r\n   *      or another path, or the raw tokens array\r\n   * @param {number=} pieceNum\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Object.defineProperty(Path, \"Empty\", {\n    /**\r\n     * Singleton to represent an empty path\r\n     *\r\n     * @const\r\n     */\n    get: function get() {\n      return new Path('');\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Path.prototype.getFront = function () {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    return this.pieces_[this.pieceNum_];\n  };\n  /**\r\n   * @return {number} The number of segments in this path\r\n   */\n\n\n  Path.prototype.getLength = function () {\n    return this.pieces_.length - this.pieceNum_;\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.popFront = function () {\n    var pieceNum = this.pieceNum_;\n\n    if (pieceNum < this.pieces_.length) {\n      pieceNum++;\n    }\n\n    return new Path(this.pieces_, pieceNum);\n  };\n  /**\r\n   * @return {?string}\r\n   */\n\n\n  Path.prototype.getBack = function () {\n    if (this.pieceNum_ < this.pieces_.length) {\n      return this.pieces_[this.pieces_.length - 1];\n    }\n\n    return null;\n  };\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  Path.prototype.toUrlEncodedString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n      }\n    }\n\n    return pathString || '/';\n  };\n  /**\r\n   * Shallow copy of the parts of the path.\r\n   *\r\n   * @param {number=} begin\r\n   * @return {!Array<string>}\r\n   */\n\n\n  Path.prototype.slice = function (begin) {\n    if (begin === void 0) {\n      begin = 0;\n    }\n\n    return this.pieces_.slice(this.pieceNum_ + begin);\n  };\n  /**\r\n   * @return {?Path}\r\n   */\n\n\n  Path.prototype.parent = function () {\n    if (this.pieceNum_ >= this.pieces_.length) {\n      return null;\n    }\n\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @param {string|!Path} childPathObj\r\n   * @return {!Path}\r\n   */\n\n\n  Path.prototype.child = function (childPathObj) {\n    var pieces = [];\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      pieces.push(this.pieces_[i]);\n    }\n\n    if (childPathObj instanceof Path) {\n      for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n        pieces.push(childPathObj.pieces_[i]);\n      }\n    } else {\n      var childPieces = childPathObj.split('/');\n\n      for (var i = 0; i < childPieces.length; i++) {\n        if (childPieces[i].length > 0) {\n          pieces.push(childPieces[i]);\n        }\n      }\n    }\n\n    return new Path(pieces, 0);\n  };\n  /**\r\n   * @return {boolean} True if there are no segments in this path\r\n   */\n\n\n  Path.prototype.isEmpty = function () {\n    return this.pieceNum_ >= this.pieces_.length;\n  };\n  /**\r\n   * @param {!Path} outerPath\r\n   * @param {!Path} innerPath\r\n   * @return {!Path} The path from outerPath to innerPath\r\n   */\n\n\n  Path.relativePath = function (outerPath, innerPath) {\n    var outer = outerPath.getFront(),\n        inner = innerPath.getFront();\n\n    if (outer === null) {\n      return innerPath;\n    } else if (outer === inner) {\n      return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n    } else {\n      throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n    }\n  };\n  /**\r\n   * @param {!Path} left\r\n   * @param {!Path} right\r\n   * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n   */\n\n\n  Path.comparePaths = function (left, right) {\n    var leftKeys = left.slice();\n    var rightKeys = right.slice();\n\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n      var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n      if (cmp !== 0) {\n        return cmp;\n      }\n    }\n\n    if (leftKeys.length === rightKeys.length) {\n      return 0;\n    }\n\n    return leftKeys.length < rightKeys.length ? -1 : 1;\n  };\n  /**\r\n   *\r\n   * @param {Path} other\r\n   * @return {boolean} true if paths are the same.\r\n   */\n\n\n  Path.prototype.equals = function (other) {\n    if (this.getLength() !== other.getLength()) {\n      return false;\n    }\n\n    for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   *\r\n   * @param {!Path} other\r\n   * @return {boolean} True if this path is a parent (or the same as) other\r\n   */\n\n\n  Path.prototype.contains = function (other) {\n    var i = this.pieceNum_;\n    var j = other.pieceNum_;\n\n    if (this.getLength() > other.getLength()) {\n      return false;\n    }\n\n    while (i < this.pieces_.length) {\n      if (this.pieces_[i] !== other.pieces_[j]) {\n        return false;\n      }\n\n      ++i;\n      ++j;\n    }\n\n    return true;\n  };\n\n  return Path;\n}(); // end Path\n\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path Initial Path.\r\n   * @param {string} errorPrefix_ Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    /** @type {!Array<string>} */\n\n    this.parts_ = path.slice();\n    /** @type {number} Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += util.stringLength(this.parts_[i]);\n    }\n\n    this.checkValid_();\n  }\n\n  Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n    /** @const {number} Maximum key depth. */\n    get: function get() {\n      return 32;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n    /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n    get: function get() {\n      return 768;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @param {string} child */\n\n  ValidationPath.prototype.push = function (child) {\n    // Count the needed '/'\n    if (this.parts_.length > 0) {\n      this.byteLength_ += 1;\n    }\n\n    this.parts_.push(child);\n    this.byteLength_ += util.stringLength(child);\n    this.checkValid_();\n  };\n\n  ValidationPath.prototype.pop = function () {\n    var last = this.parts_.pop();\n    this.byteLength_ -= util.stringLength(last); // Un-count the previous '/'\n\n    if (this.parts_.length > 0) {\n      this.byteLength_ -= 1;\n    }\n  };\n\n  ValidationPath.prototype.checkValid_ = function () {\n    if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n      throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');\n    }\n\n    if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n      throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());\n    }\n  };\n  /**\r\n   * String for use in error messages - uses '.' notation for path.\r\n   *\r\n   * @return {string}\r\n   */\n\n\n  ValidationPath.prototype.toErrorString = function () {\n    if (this.parts_.length === 0) {\n      return '';\n    }\n\n    return \"in property '\" + this.parts_.join('.') + \"'\";\n  };\n\n  return ValidationPath;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f';\nvar FORGE_DOMAIN = 'firebaseio.com';\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param {string} host Hostname portion of the url for the repo\r\n   * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n   * @param {string} namespace The namespace represented by the repo\r\n   * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param {string=} persistenceKey Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey, includeNamespaceInQueryParams) {\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this.host = host.toLowerCase();\n    this.domain = this.host.substr(this.host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this.host;\n  }\n\n  RepoInfo.prototype.needsQueryParam = function () {\n    return this.host !== this.internalHost || this.isCustomHost() || this.includeNamespaceInQueryParams;\n  };\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isDemoHost = function () {\n    return this.domain === 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';\n  };\n\n  RepoInfo.prototype.updateHost = function (newHost) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this.host, this.internalHost);\n      }\n    }\n  };\n  /**\r\n   * Returns the websocket URL for this repo\r\n   * @param {string} type of connection\r\n   * @param {Object} params list\r\n   * @return {string} The URL for this repo\r\n   */\n\n\n  RepoInfo.prototype.connectionURL = function (type, params) {\n    util.assert(typeof type === 'string', 'typeof type must == string');\n    util.assert(typeof params === 'object', 'typeof params must == object');\n    var connURL;\n\n    if (type === WEBSOCKET) {\n      connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n    } else if (type === LONG_POLLING) {\n      connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n    } else {\n      throw new Error('Unknown connection type: ' + type);\n    }\n\n    if (this.needsQueryParam()) {\n      params['ns'] = this.namespace;\n    }\n\n    var pairs = [];\n    each(params, function (key, value) {\n      pairs.push(key + '=' + value);\n    });\n    return connURL + pairs.join('&');\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n  /** @return {string} */\n\n\n  RepoInfo.prototype.toURLString = function () {\n    return (this.secure ? 'https://' : 'http://') + this.host;\n  };\n\n  return RepoInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\n\n\nvar parseRepoInfo = function parseRepoInfo(dataURL) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\n\n\nvar parseDatabaseURL = function parseDatabaseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\n\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\n\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  util.contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && util.stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      path.push(key);\n      validateFirebaseData(errorPrefix, value, path);\n      path.pop();\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + path.toErrorString() + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = curPath.slice();\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(Path.comparePaths);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && prevPath.contains(curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, path.child(curPath));\n\n    if (curPath.getBack() === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentNumber, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (path.getFront() === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Repo} repo_\r\n   * @param {!Path} path_\r\n   */\n  function OnDisconnect(repo_, path_) {\n    this.repo_ = repo_;\n    this.path_ = path_;\n  }\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    util.validateCallback('OnDisconnect.set', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} value\r\n   * @param {number|string|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n    util.validateCallback('OnDisconnect.update', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   * @constructor\r\n   * @dict\r\n   * @param {boolean} committed\r\n   * @param {DataSnapshot} snapshot\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\n\nvar nextPushId = function () {\n  // Modeled after base64 web-safe chars, but ordered by ASCII.\n  var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz'; // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    util.assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    util.assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n  /**\r\n   *\r\n   * @param {!string} name\r\n   * @param {!Node} node\r\n   * @return {NamedNode}\r\n   */\n\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @constructor\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   * @param {!Node} oldNode\r\n   * @param {!Node} newNode\r\n   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @inheritDoc\r\n   */\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\n\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    util.assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && util.contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @implements {Node}\r\n   * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n   *                                         The object type is possible in the event of a deferred value\r\n   * @param {!Node=} priorityNode_ The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else if (path.getFront() === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @return {Object|string|number|boolean} The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      util.assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   * @param {!LeafNode} otherLeaf\r\n   * @return {!number}\r\n   * @private\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.equals = function (other) {\n    /**\r\n     * @inheritDoc\r\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   * @type {Array.<!string>}\r\n   * @const\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V, T\r\n   * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n   * @param {?K} startKey\r\n   * @param {function(K, K): number} comparator\r\n   * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n   * @param {(function(K, V):T)=} resultGenerator_\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    /** @private\r\n     * @type {Array.<!LLRBNode>}\r\n     */\n\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {!K} key Key associated with this node.\r\n   * @param {!V} value Value associated with this node.\r\n   * @param {?boolean} color Whether this node is red.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n   * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param {?K} key New key for the node, or null.\r\n   * @param {?V} value New value for the node, or null.\r\n   * @param {?boolean} color New color for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n   * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n   * @return {!LLRBNode} The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {*} True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @return {!Object} The minimum node in the tree.\r\n   * @private\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @return {!K} The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Object} key Key to insert.\r\n   * @param {!Object} value Value to insert.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param {!Object} key The key of the item to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @private\r\n   * @return {!LLRBNode} New tree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @private\r\n   * @return {boolean} True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @return {!LLRBEmptyNode} The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBNode} New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @param {Comparator} comparator Comparator.\r\n   * @return {!LLRBEmptyNode} New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @return {number} The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @return {boolean} True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param {function(!K, !V)} action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return {boolean} True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n  /**\r\n   * @return {null}\r\n   */\n\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n  /**\r\n   * @private\r\n   * @return {number} Not sure what this returns exactly. :-).\r\n   */\n\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @private\r\n   * @return {boolean} Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @template K, V\r\n   * @param {function(K, K):number} comparator_ Key comparator.\r\n   * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param {!K} key Key to be added.\r\n   * @param {!V} value Value to be added.\r\n   * @return {!SortedMap.<K, V>} New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param {!K} key The key to remove.\r\n   * @return {!SortedMap.<K, V>} New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param {!K} key The key to look up.\r\n   * @return {?V} The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param {K} key The key to find the predecessor of\r\n   * @return {?K} The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @return {boolean} True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @return {number} The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @return {?K} The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @return {?K} The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!K, !V):*} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param {function(!Object, !Object)} action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return {*} True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @template T\r\n   * @param {(function(K, V):T)=} resultGenerator\r\n   * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   * @const\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LOG_2 = Math.log(2);\n/**\r\n * @constructor\r\n */\n\nvar Base12Num =\n/** @class */\nfunction () {\n  /**\r\n   * @param {number} length\r\n   */\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function get() {\n      util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = util.safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return util.contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = tslib.__assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = tslib.__assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\n      var index = util.safeGet(_this.indexSet_, indexName);\n      util.assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = util.map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!SortedMap.<string, !Node>} children_ List of children\r\n   * of this node..\r\n   * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n   * @param {!IndexMap} indexMap_\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(path.popFront());\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    util.assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = path.getFront();\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   * @param {!Index} indexDefinition\r\n   * @return {?string}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {?NamedNode}\r\n   */\n\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n  /**\r\n   *\r\n   * @param {!NamedNode} startPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n  /**\r\n   * @param {!NamedNode} endPost\r\n   * @param {!Index} indexDefinition\r\n   * @return {!SortedMapIterator}\r\n   */\n\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   * @private\r\n   * @param {!Index} indexDefinition\r\n   * @return {?SortedMap.<NamedNode, Node>}\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n  /**\r\n   * @private\r\n   * @type {RegExp}\r\n   */\n\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\n\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  tslib.__extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  util.assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (util.contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {string} name\r\n   * @return {!NamedNode}\r\n   */\n\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @return {!string} String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n  /**\r\n   * @param {!Node} snap\r\n   * @return {!Node}\r\n   * @protected\r\n   */\n\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.toString = function () {\n    return this.indexPath_.slice().join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_ A SnapshotNode to wrap.\r\n   * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n   * @param {!Index} index_ The iteration order for this snapshot\r\n   */\n  function DataSnapshot(node_, ref_, index_) {\n    this.node_ = node_;\n    this.ref_ = ref_;\n    this.index_ = index_;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {!DataSnapshot} DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (childPathString) {\n    util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    var childRef = this.ref_.child(childPath);\n    return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param {!string} childPathString Path to a child.\r\n   * @return {boolean} Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (childPathString) {\n    util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @return {string|number|null} The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length); // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n\n    return this.node_.getPriority().val();\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param {function(!DataSnapshot)} action Callback function to be called\r\n   * for each child.\r\n   * @return {boolean} True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    util.validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this.node_; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this.index_, function (key, node) {\n      return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    } else {\n      return !this.node_.isEmpty();\n    }\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this.ref_.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @return {number} The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this.node_.numChildren();\n  };\n  /**\r\n   * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return this.ref_;\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n   * @param {!DataSnapshot} snapshot The data backing the event\r\n   * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.getRef();\n\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + util.stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param {EventRegistration} eventRegistration\r\n   * @param {Error} error\r\n   * @param {!Path} path\r\n   */\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?function(!DataSnapshot)} callback_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {?Object} context_\r\n   */\n  function ValueEventRegistration(callback_, cancelCallback_, context_) {\n    this.callback_ = callback_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_1 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_1.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_1 = this.callback_;\n      return function () {\n        cb_1.call(ctx, eventData.snapshot);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callback_ === this.callback_ && other.context_ === this.context_;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callback_ !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  /**\r\n   * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n   * @param {?function(Error)} cancelCallback_\r\n   * @param {Object=} context_\r\n   */\n  function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n    this.callbacks_ = callbacks_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return util.contains(this.callbacks_, eventToCheck);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    util.assert(change.childName != null, 'Child events should have a childName.');\n    var ref = query.getRef().child(\n    /** @type {!string} */\n    change.childName);\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_2 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_2.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_2 = this.callbacks_[eventData.eventType];\n      return function () {\n        cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        var otherKeys = Object.keys(other.callbacks_);\n        var thisKeys = Object.keys(this.callbacks_);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks_[eventType] === _this.callbacks_[eventType];\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks_ !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor;\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(repo, path, queryParams_, orderByCalled_) {\n    this.repo = repo;\n    this.path = path;\n    this.queryParams_ = queryParams_;\n    this.orderByCalled_ = orderByCalled_;\n  }\n\n  Object.defineProperty(Query, \"__referenceConstructor\", {\n    get: function get() {\n      util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n      return __referenceConstructor;\n    },\n    set: function set(val) {\n      __referenceConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Validates start/end values for queries.\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n  Query.validateQueryEndpoints_ = function (params) {\n    var startNode = null;\n    var endNode = null;\n\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n      var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' + 'or equalTo() must be a string.';\n\n      if (params.hasStart()) {\n        var startName = params.getIndexStartName();\n\n        if (startName !== MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n\n      if (params.hasEnd()) {\n        var endName = params.getIndexEndName();\n\n        if (endName !== MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n        throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\n      }\n    } else {\n      util.assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n      if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n        throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' + 'an object.');\n      }\n    }\n  };\n  /**\r\n   * Validates that limit* has been called with the correct combination of parameters\r\n   * @param {!QueryParams} params\r\n   * @private\r\n   */\n\n\n  Query.validateLimit_ = function (params) {\n    if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n      throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\n    }\n  };\n  /**\r\n   * Validates that no other order by call has been made\r\n   * @param {!string} fnName\r\n   * @private\r\n   */\n\n\n  Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   */\n\n\n  Query.prototype.getQueryParams = function () {\n    return this.queryParams_;\n  };\n  /**\r\n   * @return {!Reference}\r\n   */\n\n\n  Query.prototype.getRef = function () {\n    util.validateArgCount('Query.ref', 0, 0, arguments.length); // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n\n    return new Query.__referenceConstructor(this.repo, this.path);\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @param {!function(DataSnapshot, string=)} callback\r\n   * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n   * @param {Object=} context\r\n   * @return {!function(DataSnapshot, string=)}\r\n   */\n\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    util.validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    util.validateCallback('Query.on', 2, callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      var callbacks = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n\n    return callback;\n  };\n  /**\r\n   * @param {!function(!DataSnapshot)} callback\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n    var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n   * @param {?function(Error)} cancelCallback\r\n   * @param {?Object} context\r\n   * @protected\r\n   */\n\n\n  Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n    var container = new ChildEventRegistration(callbacks, cancelCallback, context);\n    this.repo.addEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * @param {string=} eventType\r\n   * @param {(function(!DataSnapshot, ?string=))=} callback\r\n   * @param {Object=} context\r\n   */\n\n\n  Query.prototype.off = function (eventType, callback, context) {\n    util.validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    util.validateCallback('Query.off', 2, callback, true);\n    util.validateContextObject('Query.off', 3, context, true);\n    var container = null;\n    var callbacks = null;\n\n    if (eventType === 'value') {\n      var valueCallback = callback || null;\n      container = new ValueEventRegistration(valueCallback, null, context || null);\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n\n    this.repo.removeEventCallbackForQuery(this, container);\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   * @param {!string} eventType\r\n   * @param {!function(!DataSnapshot, string=)} userCallback\r\n   * @param failureCallbackOrContext\r\n   * @param context\r\n   * @return {!firebase.Promise}\r\n   */\n\n\n  Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    util.validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    util.validateCallback('Query.once', 2, userCallback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context); // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n\n    var firstCall = true;\n    var deferred = new util.Deferred(); // A dummy error handler in case a user wasn't expecting promises\n\n    deferred.promise.catch(function () {});\n\n    var onceCallback = function onceCallback(snapshot) {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n\n        _this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(eventType, onceCallback,\n    /*cancel=*/\n    function (err) {\n      _this.off(eventType, onceCallback);\n\n      if (ret.cancel) {\n        ret.cancel.bind(ret.context)(err);\n      }\n\n      deferred.reject(err);\n    });\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   * @param {!number} limit\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToLast: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   * @param {!string} path\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n\n    if (path === '$key') {\n      throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n    } else if (path === '$priority') {\n      throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n    } else if (path === '$value') {\n      throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n    }\n\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    var parsedPath = new Path(path);\n\n    if (parsedPath.isEmpty()) {\n      throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = this.queryParams_.orderBy(index);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    var newParams = this.queryParams_.orderBy(KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    var newParams = this.queryParams_.orderBy(VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    util.validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n    var newParams = this.queryParams_.startAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n    } // Calling with no params tells us to start at the beginning.\n\n\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * @param {number|string|boolean|null} value\r\n   * @param {?string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    util.validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n    var newParams = this.queryParams_.endAt(value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   * @param {number|string|boolean|null} value\r\n   * @param {string=} name\r\n   * @return {!Query}\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' + 'equalTo).');\n    }\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' + 'equalTo).');\n    }\n\n    return this.startAt(value, name).endAt(value, name);\n  };\n  /**\r\n   * @return {!string} URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    util.validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this.repo.toString() + this.path.toUrlEncodedString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  };\n  /**\r\n   * An object representation of the query parameters used by this Query.\r\n   * @return {!Object}\r\n   */\n\n\n  Query.prototype.queryObject = function () {\n    return this.queryParams_.getQueryObject();\n  };\n  /**\r\n   * @return {!string}\r\n   */\n\n\n  Query.prototype.queryIdentifier = function () {\n    var obj = this.queryObject();\n    var id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   * @param {Query} other\r\n   * @return {boolean}\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    var sameRepo = this.repo === other.repo;\n    var samePath = this.path.equals(other.path);\n    var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param {!string} fnName The function name (on or once)\r\n   * @param {(function(Error)|Object)=} cancelOrContext\r\n   * @param {Object=} context\r\n   * @return {{cancel: ?function(Error), context: ?Object}}\r\n   * @private\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: null,\n      context: null\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      util.validateCallback(fnName, 3, ret.cancel, true);\n      ret.context = context;\n      util.validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(util.errorPrefix(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = this.path_.child(childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return this.syncTree_.calcCompleteEventCache(this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\n\n\nvar resolveDeferredLeafValue = function resolveDeferredLeafValue(value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    util.assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function resolveScalarDeferredValue(op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      util.assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function resolveComplexDeferredValue(op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    util.assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    util.assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  util.assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\n\n\nvar SparseSnapshotTree =\n/** @class */\nfunction () {\n  function SparseSnapshotTree() {\n    this.value = null;\n    this.children = new Map();\n  }\n  /**\r\n   * Gets the node stored at the given path if one exists.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return The retrieved node, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.find = function (path) {\n    if (this.value != null) {\n      return this.value.getChild(path);\n    } else if (!path.isEmpty() && this.children.size > 0) {\n      var childKey = path.getFront();\n      path = path.popFront();\n\n      if (this.children.has(childKey)) {\n        var childTree = this.children.get(childKey);\n        return childTree.find(path);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Stores the given node at the specified path. If there is already a node\r\n   * at a shallower path, it merges the new data into that snapshot node.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @param data The new data, or null.\r\n   */\n\n\n  SparseSnapshotTree.prototype.remember = function (path, data) {\n    if (path.isEmpty()) {\n      this.value = data;\n      this.children.clear();\n    } else if (this.value !== null) {\n      this.value = this.value.updateChild(path, data);\n    } else {\n      var childKey = path.getFront();\n\n      if (!this.children.has(childKey)) {\n        this.children.set(childKey, new SparseSnapshotTree());\n      }\n\n      var child = this.children.get(childKey);\n      path = path.popFront();\n      child.remember(path, data);\n    }\n  };\n  /**\r\n   * Purge the data at path from the cache.\r\n   *\r\n   * @param path Path to look up snapshot for.\r\n   * @return True if this node should now be removed.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forget = function (path) {\n    if (path.isEmpty()) {\n      this.value = null;\n      this.children.clear();\n      return true;\n    } else {\n      if (this.value !== null) {\n        if (this.value.isLeafNode()) {\n          // We're trying to forget a node that doesn't exist\n          return false;\n        } else {\n          var value = this.value;\n          this.value = null;\n          var self_1 = this;\n          value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n            self_1.remember(new Path(key), tree);\n          });\n          return this.forget(path);\n        }\n      } else if (this.children.size > 0) {\n        var childKey = path.getFront();\n        path = path.popFront();\n\n        if (this.children.has(childKey)) {\n          var safeToRemove = this.children.get(childKey).forget(path);\n\n          if (safeToRemove) {\n            this.children.delete(childKey);\n          }\n        }\n\n        return this.children.size === 0;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\r\n   * Recursively iterates through all of the stored tree and calls the\r\n   * callback on each one.\r\n   *\r\n   * @param prefixPath Path to look up node for.\r\n   * @param func The function to invoke for each tree.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\n    if (this.value !== null) {\n      func(prefixPath, this.value);\n    } else {\n      this.forEachChild(function (key, tree) {\n        var path = new Path(prefixPath.toString() + '/' + key);\n        tree.forEachTree(path, func);\n      });\n    }\n  };\n  /**\r\n   * Iterates through each immediate child and triggers the callback.\r\n   *\r\n   * @param func The function to invoke for each child.\r\n   */\n\n\n  SparseSnapshotTree.prototype.forEachChild = function (func) {\n    this.children.forEach(function (tree, key) {\n      func(key, tree);\n    });\n  };\n\n  return SparseSnapshotTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\n\n\nvar OperationSource =\n/** @class */\nfunction () {\n  function OperationSource(fromUser, fromServer, queryId, tagged) {\n    this.fromUser = fromUser;\n    this.fromServer = fromServer;\n    this.queryId = queryId;\n    this.tagged = tagged;\n    util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\n  }\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n\n  OperationSource.User = new OperationSource(\n  /*fromUser=*/\n  true, false, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @const\r\n   * @type {!OperationSource}\r\n   */\n\n  OperationSource.Server = new OperationSource(false,\n  /*fromServer=*/\n  true, null,\n  /*tagged=*/\n  false);\n  /**\r\n   * @param {string} queryId\r\n   * @return {!OperationSource}\r\n   */\n\n  OperationSource.forServerTaggedQuery = function (queryId) {\n    return new OperationSource(false,\n    /*fromServer=*/\n    true, queryId,\n    /*tagged=*/\n    true);\n  };\n\n  return OperationSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n   * @param {!boolean} revert\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = OperationSource.User;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!this.path.isEmpty()) {\n      util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(Path.Empty, childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {?T} value\r\n   * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n   */\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n  /**\r\n   * @template T\r\n   * @param {!Object.<string, !T>} obj\r\n   * @return {!ImmutableTree.<!T>}\r\n   */\n\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = ImmutableTree.Empty;\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   * @return {boolean}\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n   * on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param {!Path} relativePath The remainder of the path\r\n   * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n   *   node\r\n   * @return {?{path:!Path, value:!T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: Path.Empty,\n        value: this.value\n      };\n    } else {\n      if (relativePath.isEmpty()) {\n        return null;\n      } else {\n        var front = relativePath.getFront();\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = new Path(front).child(childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   * @param {!Path} relativePath\r\n   * @return {?{path: !Path, value: !T}}\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @param {!Path} relativePath\r\n   * @return {!ImmutableTree.<T>} The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this;\n    } else {\n      var front = relativePath.getFront();\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(relativePath.popFront());\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to set value at.\r\n   * @param {?T} toSet Value to set.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (relativePath.isEmpty()) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.set(relativePath.popFront(), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param {!Path} relativePath Path to value to remove.\r\n   * @return {!ImmutableTree.<T>} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      if (this.children.isEmpty()) {\n        return ImmutableTree.Empty;\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(relativePath.popFront());\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return ImmutableTree.Empty;\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param {!Path} relativePath Path to get value for.\r\n   * @return {?T} Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (relativePath.isEmpty()) {\n      return this.value;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(relativePath.popFront());\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param {!Path} relativePath Path to replace subtree for.\r\n   * @param {!ImmutableTree} newTree New tree.\r\n   * @return {!ImmutableTree} Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (relativePath.isEmpty()) {\n      return newTree;\n    } else {\n      var front = relativePath.getFront();\n      var child = this.children.get(front) || ImmutableTree.Empty;\n      var newChild = child.setTree(relativePath.popFront(), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   * @template V\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(Path.Empty, fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   * @template V\r\n   * @param {!Path} pathSoFar\r\n   * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n   * @return {V}\r\n   * @private\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   * @template V\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T):?V} f\r\n   * @return {?V}\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathToFollow.isEmpty()) {\n        return null;\n      } else {\n        var front = pathToFollow.getFront();\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!function(!Path, !T)} f\r\n   * @returns {!ImmutableTree.<T>}\r\n   */\n\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathToFollow.isEmpty()) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathToFollow.getFront();\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\n      } else {\n        return ImmutableTree.Empty;\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param {function(!Path, !T)} f A function to be called with\r\n   *   the path from the root of the tree to a node, and the value at that node.\r\n   *   Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(Path.Empty, f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(currentRelativePath.child(childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n  /**\r\n   *\r\n   * @param {function(string, !T)} f\r\n   */\n\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  ImmutableTree.Empty = new ImmutableTree(null);\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new ListenComplete(this.source, Path.Empty);\n    } else {\n      return new ListenComplete(this.source, this.path.popFront());\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, this.path.popFront(), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (this.path.isEmpty()) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, Path.Empty, childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, Path.Empty, childTree);\n      }\n    } else {\n      util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, this.path.popFront(), this.children);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Node} node_\r\n   * @param {boolean} fullyInitialized_\r\n   * @param {boolean} filtered_\r\n   */\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (path.isEmpty()) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = path.getFront();\n    return this.isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!string} key\r\n   * @return {boolean}\r\n   */\n\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n  /**\r\n   * @return {!Node}\r\n   */\n\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\n\n\nvar ViewCache =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!CacheNode} eventCache_\r\n   * @param {!CacheNode} serverCache_\r\n   */\n  function ViewCache(eventCache_, serverCache_) {\n    this.eventCache_ = eventCache_;\n    this.serverCache_ = serverCache_;\n  }\n  /**\r\n   * @param {!Node} eventSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\n    return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\n  };\n  /**\r\n   * @param {!Node} serverSnap\r\n   * @param {boolean} complete\r\n   * @param {boolean} filtered\r\n   * @return {!ViewCache}\r\n   */\n\n\n  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\n    return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getEventCache = function () {\n    return this.eventCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteEventSnap = function () {\n    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;\n  };\n  /**\r\n   * @return {!CacheNode}\r\n   */\n\n\n  ViewCache.prototype.getServerCache = function () {\n    return this.serverCache_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  ViewCache.prototype.getCompleteServerSnap = function () {\n    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;\n  };\n  /**\r\n   * @const\r\n   * @type {ViewCache}\r\n   */\n\n\n  ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false), new CacheNode(ChildrenNode.EMPTY_NODE,\n  /*fullyInitialized=*/\n  false,\n  /*filtered=*/\n  false));\n  return ViewCache;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\n\n\nvar Change =\n/** @class */\nfunction () {\n  function Change(type, snapshotNode, childName, oldSnap, prevName) {\n    this.type = type;\n    this.snapshotNode = snapshotNode;\n    this.childName = childName;\n    this.oldSnap = oldSnap;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.valueChange = function (snapshot) {\n    return new Change(Change.VALUE, snapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childAddedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_ADDED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childRemovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} newSnapshot\r\n   * @param {!Node} oldSnapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n    return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n  };\n  /**\r\n   * @param {string} childKey\r\n   * @param {!Node} snapshot\r\n   * @return {!Change}\r\n   */\n\n\n  Change.childMovedChange = function (childKey, snapshot) {\n    return new Change(Change.CHILD_MOVED, snapshot, childKey);\n  }; //event types\n\n  /** Event type for a child added */\n\n\n  Change.CHILD_ADDED = 'child_added';\n  /** Event type for a child removed */\n\n  Change.CHILD_REMOVED = 'child_removed';\n  /** Event type for a child changed */\n\n  Change.CHILD_CHANGED = 'child_changed';\n  /** Event type for a child moved */\n\n  Change.CHILD_MOVED = 'child_moved';\n  /** Event type for a value change */\n\n  Change.VALUE = 'value';\n  return Change;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\n        } else {\n          util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    util.assert(type === Change.CHILD_ADDED || type === Change.CHILD_CHANGED || type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\n    util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\n      } else if (type === Change.CHILD_REMOVED && oldType === Change.CHILD_ADDED) {\n        this.changeMap.delete(childKey);\n      } else if (type === Change.CHILD_REMOVED && oldType === Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\n      } else if (type === Change.CHILD_CHANGED && oldType === Change.CHILD_ADDED) {\n        this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\n      } else if (type === Change.CHILD_CHANGED && oldType === Change.CHILD_CHANGED) {\n        this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\n      } else {\n        throw util.assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\n// eslint-disable-next-line @typescript-eslint/class-name-casing\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!WriteTreeRef} writes_\r\n   * @param {!ViewCache} viewCache_\r\n   * @param {?Node} optCompleteServerCache_\r\n   */\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.getEventCache();\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();\n      return this.writes_.calcCompleteChild(childKey, serverNode);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();\n    var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @constructor\r\n * @struct\r\n */\n\n\nvar ProcessorResult =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Array.<!Change>} changes\r\n   */\n  function ProcessorResult(viewCache, changes) {\n    this.viewCache = viewCache;\n    this.changes = changes;\n  }\n\n  return ProcessorResult;\n}();\n/**\r\n * @constructor\r\n */\n\n\nvar ViewProcessor =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!NodeFilter} filter_\r\n   */\n  function ViewProcessor(filter_) {\n    this.filter_ = filter_;\n  }\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   */\n\n\n  ViewProcessor.prototype.assertIndexed = function (viewCache) {\n    util.assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\n    util.assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @return {!ProcessorResult}\r\n   */\n\n\n  ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\n    var accumulator = new ChildChangeAccumulator();\n    var newViewCache, filterServerNode;\n\n    if (operation.type === OperationType.OVERWRITE) {\n      var overwrite = operation;\n\n      if (overwrite.source.fromUser) {\n        newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n      } else {\n        util.assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n        // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n        // again\n\n        filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !overwrite.path.isEmpty();\n        newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.MERGE) {\n      var merge = operation;\n\n      if (merge.source.fromUser) {\n        newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n      } else {\n        util.assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n        filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();\n        newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n      }\n    } else if (operation.type === OperationType.ACK_USER_WRITE) {\n      var ackUserWrite = operation;\n\n      if (!ackUserWrite.revert) {\n        newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n      } else {\n        newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n      }\n    } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n      newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\n    } else {\n      throw util.assertionError('Unknown operation type: ' + operation.type);\n    }\n\n    var changes = accumulator.getChanges();\n    ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\n    return new ProcessorResult(newViewCache, changes);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!ViewCache} newViewCache\r\n   * @param {!Array.<!Change>} accumulator\r\n   * @private\r\n   */\n\n\n  ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\n    var eventSnap = newViewCache.getEventCache();\n\n    if (eventSnap.isFullyInitialized()) {\n      var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n      var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\n\n      if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(\n      /** @type {!Node} */\n      oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n        accumulator.push(Change.valueChange(\n        /** @type {!Node} */\n        newViewCache.getCompleteEventSnap()));\n      }\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} changePath\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!CompleteChildSource} source\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\n    var oldEventSnap = viewCache.getEventCache();\n\n    if (writesCache.shadowingWrite(changePath) != null) {\n      // we have a shadowing write, ignore changes\n      return viewCache;\n    } else {\n      var newEventCache = void 0,\n          serverNode = void 0;\n\n      if (changePath.isEmpty()) {\n        // TODO: figure out how this plays with \"sliding ack windows\"\n        util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n        if (viewCache.getServerCache().isFiltered()) {\n          // We need to special case this, because we need to only apply writes to complete children, or\n          // we might end up raising events for incomplete children. If the server data is filtered deep\n          // writes cannot be guaranteed to be complete\n          var serverCache = viewCache.getCompleteServerSnap();\n          var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n          var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\n        } else {\n          var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n          newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\n        }\n      } else {\n        var childKey = changePath.getFront();\n\n        if (childKey === '.priority') {\n          util.assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\n          var oldEventNode = oldEventSnap.getNode();\n          serverNode = viewCache.getServerCache().getNode(); // we might have overwrites for this priority\n\n          var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\n\n          if (updatedPriority != null) {\n            newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\n          } else {\n            // priority didn't change, keep old node\n            newEventCache = oldEventSnap.getNode();\n          }\n        } else {\n          var childChangePath = changePath.popFront(); // update child\n\n          var newEventChild = void 0;\n\n          if (oldEventSnap.isCompleteForChild(childKey)) {\n            serverNode = viewCache.getServerCache().getNode();\n            var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\n\n            if (eventChildUpdate != null) {\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n            } else {\n              // Nothing changed, just keep the old child\n              newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n            }\n          } else {\n            newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n          }\n\n          if (newEventChild != null) {\n            newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n          } else {\n            // no complete child available or no change\n            newEventCache = oldEventSnap.getNode();\n          }\n        }\n      }\n\n      return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\n    }\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n    var oldServerSnap = oldViewCache.getServerCache();\n    var newServerCache;\n    var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();\n\n    if (changePath.isEmpty()) {\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n    } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n      // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n      var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n      newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n    } else {\n      var childKey = changePath.getFront();\n\n      if (!oldServerSnap.isCompleteForPath(changePath) && changePath.getLength() > 1) {\n        // We don't update incomplete nodes with updates intended for other listeners\n        return oldViewCache;\n      }\n\n      var childChangePath = changePath.popFront();\n      var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n      var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n      if (childKey === '.priority') {\n        newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n      } else {\n        newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n      }\n    }\n\n    var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n    return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} oldViewCache\r\n   * @param {!Path} changePath\r\n   * @param {!Node} changedSnap\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n    var oldEventSnap = oldViewCache.getEventCache();\n    var newViewCache, newEventCache;\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n    if (changePath.isEmpty()) {\n      newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\n      newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\n    } else {\n      var childKey = changePath.getFront();\n\n      if (childKey === '.priority') {\n        newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\n        newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n      } else {\n        var childChangePath = changePath.popFront();\n        var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n        var newChild = void 0;\n\n        if (childChangePath.isEmpty()) {\n          // Child overwrite, we can replace the child\n          newChild = changedSnap;\n        } else {\n          var childNode = source.getCompleteChild(childKey);\n\n          if (childNode != null) {\n            if (childChangePath.getBack() === '.priority' && childNode.getChild(childChangePath.parent()).isEmpty()) {\n              // This is a priority update on an empty node. If this node exists on the server, the\n              // server will send down the priority in the update, so ignore for now\n              newChild = childNode;\n            } else {\n              newChild = childNode.updateChild(childChangePath, changedSnap);\n            }\n          } else {\n            // There is no complete child node available\n            newChild = ChildrenNode.EMPTY_NODE;\n          }\n        }\n\n        if (!oldChild.equals(newChild)) {\n          var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n          newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\n        } else {\n          newViewCache = oldViewCache;\n        }\n      }\n    }\n\n    return newViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {string} childKey\r\n   * @return {boolean}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\n    return viewCache.getEventCache().isCompleteForChild(childKey);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n    var _this = this; // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    changedChildren.foreach(function (relativePath, childNode) {\n      var writePath = path.child(relativePath);\n\n      if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\n        curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!Node} node\r\n   * @param {ImmutableTree.<!Node>} merge\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyMerge_ = function (node, merge) {\n    merge.foreach(function (relativePath, childNode) {\n      node = node.updateChild(relativePath, childNode);\n    });\n    return node;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!ImmutableTree.<!Node>} changedChildren\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache\r\n   * @param {boolean} filterServerNode\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n    var _this = this; // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n    // wait for the complete data update coming soon.\n\n\n    if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {\n      return viewCache;\n    } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n    // window leaving room for new items.  It's important we process these changes first, so we\n    // iterate the changes twice, first processing any that affect items currently in view.\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n    // not the other.\n\n\n    var curViewCache = viewCache;\n    var viewMergeTree;\n\n    if (path.isEmpty()) {\n      viewMergeTree = changedChildren;\n    } else {\n      viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\n    }\n\n    var serverNode = viewCache.getServerCache().getNode();\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (serverNode.hasChild(childKey)) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n      var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;\n\n      if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n        var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);\n\n        var newChild = _this.applyMerge_(serverChild, childMergeTree);\n\n        curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n      }\n    });\n    return curViewCache;\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} ackPath\r\n   * @param {!ImmutableTree<!boolean>} affectedTree\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n    if (writesCache.shadowingWrite(ackPath) != null) {\n      return viewCache;\n    } // Only filter server node if it is currently filtered\n\n\n    var filterServerNode = viewCache.getServerCache().isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n    // now that it won't be shadowed.\n\n    var serverCache = viewCache.getServerCache();\n\n    if (affectedTree.value != null) {\n      // This is an overwrite.\n      if (ackPath.isEmpty() && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n        return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n      } else if (ackPath.isEmpty()) {\n        // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n        // should just re-apply whatever we have in our cache as a merge.\n        var changedChildren_1 = ImmutableTree.Empty;\n        serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n          changedChildren_1 = changedChildren_1.set(new Path(name), node);\n        });\n        return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n      } else {\n        return viewCache;\n      }\n    } else {\n      // This is a merge.\n      var changedChildren_2 = ImmutableTree.Empty;\n      affectedTree.foreach(function (mergePath, value) {\n        var serverCachePath = ackPath.child(mergePath);\n\n        if (serverCache.isCompleteForPath(serverCachePath)) {\n          changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n        }\n      });\n      return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\n    var oldServerNode = viewCache.getServerCache();\n    var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\n    return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n  };\n  /**\r\n   * @param {!ViewCache} viewCache\r\n   * @param {!Path} path\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @param {!ChildChangeAccumulator} accumulator\r\n   * @return {!ViewCache}\r\n   * @private\r\n   */\n\n\n  ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\n    var complete;\n\n    if (writesCache.shadowingWrite(path) != null) {\n      return viewCache;\n    } else {\n      var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n      var oldEventCache = viewCache.getEventCache().getNode();\n      var newEventCache = void 0;\n\n      if (path.isEmpty() || path.getFront() === '.priority') {\n        var newNode = void 0;\n\n        if (viewCache.getServerCache().isFullyInitialized()) {\n          newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n        } else {\n          var serverChildren = viewCache.getServerCache().getNode();\n          util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n          newNode = writesCache.calcCompleteEventChildren(serverChildren);\n        }\n\n        newNode = newNode;\n        newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\n      } else {\n        var childKey = path.getFront();\n        var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\n\n        if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {\n          newChild = oldEventCache.getImmediateChild(childKey);\n        }\n\n        if (newChild != null) {\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\n        } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\n          // No complete child available, delete the existing one, if any\n          newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\n        } else {\n          newEventCache = oldEventCache;\n        }\n\n        if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {\n          // We might have reverted all child writes. Maybe the old event was a leaf node\n          complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\n\n          if (complete.isLeafNode()) {\n            newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\n          }\n        }\n      }\n\n      complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(Path.Empty) != null;\n      return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\n    }\n  };\n\n  return ViewProcessor;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   */\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    /**\r\n     * @private\r\n     * @type {!Index}\r\n     */\n\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n  /**\r\n   * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n   * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n   *\r\n   * Notes:\r\n   *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n   *    our index.\r\n   *  - prevName will be calculated based on the index ordering.\r\n   *\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {!Array.<!EventRegistration>} eventRegistrations\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\n    var _this = this;\n\n    var events = [];\n    var moves = [];\n    changes.forEach(function (change) {\n      if (change.type === Change.CHILD_CHANGED && _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n        moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\n      }\n    });\n    this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\n    this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\n    return events;\n  };\n  /**\r\n   * Given changes of a single change type, generate the corresponding events.\r\n   *\r\n   * @param {!Array.<!Event>} events\r\n   * @param {!string} eventType\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Array.<!EventRegistration>} registrations\r\n   * @param {!Node} eventCache\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\n    var _this = this;\n\n    var filteredChanges = changes.filter(function (change) {\n      return change.type === eventType;\n    });\n    filteredChanges.sort(this.compareChanges_.bind(this));\n    filteredChanges.forEach(function (change) {\n      var materializedChange = _this.materializeSingleChange_(change, eventCache);\n\n      registrations.forEach(function (registration) {\n        if (registration.respondsTo(change.type)) {\n          events.push(registration.createEvent(materializedChange, _this.query_));\n        }\n      });\n    });\n  };\n  /**\r\n   * @param {!Change} change\r\n   * @param {!Node} eventCache\r\n   * @return {!Change}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\n    if (change.type === 'value' || change.type === 'child_removed') {\n      return change;\n    } else {\n      change.prevName = eventCache.getPredecessorChildName(\n      /** @type {!string} */\n      change.childName, change.snapshotNode, this.index_);\n      return change;\n    }\n  };\n  /**\r\n   * @param {!Change} a\r\n   * @param {!Change} b\r\n   * @return {number}\r\n   * @private\r\n   */\n\n\n  EventGenerator.prototype.compareChanges_ = function (a, b) {\n    if (a.childName == null || b.childName == null) {\n      throw util.assertionError('Should only compare child_ events.');\n    }\n\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n    return this.index_.compare(aWrapped, bWrapped);\n  };\n\n  return EventGenerator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {!Query} query_\r\n   * @param {!ViewCache} initialViewCache\r\n   */\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_.getQueryParams();\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = params.getNodeFilter();\n    /**\r\n     * @type {ViewProcessor}\r\n     * @private\r\n     */\n\n    this.processor_ = new ViewProcessor(filter);\n    var initialServerCache = initialViewCache.getServerCache();\n    var initialEventCache = initialViewCache.getEventCache(); // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    /**\r\n     * @type {!ViewCache}\r\n     * @private\r\n     */\n\n    this.viewCache_ = new ViewCache(newEventCache, newServerCache);\n    /**\r\n     * @type {!EventGenerator}\r\n     * @private\r\n     */\n\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n  /**\r\n   * @return {!Query}\r\n   */\n\n\n  View.prototype.getQuery = function () {\n    return this.query_;\n  };\n  /**\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getServerCache = function () {\n    return this.viewCache_.getServerCache().getNode();\n  };\n  /**\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  View.prototype.getCompleteServerCache = function (path) {\n    var cache = this.viewCache_.getCompleteServerSnap();\n\n    if (cache) {\n      // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n      // we need to see if it contains the child we're interested in.\n      if (this.query_.getQueryParams().loadsAllData() || !path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty()) {\n        return cache.getChild(path);\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  View.prototype.isEmpty = function () {\n    return this.eventRegistrations_.length === 0;\n  };\n  /**\r\n   * @param {!EventRegistration} eventRegistration\r\n   */\n\n\n  View.prototype.addEventRegistration = function (eventRegistration) {\n    this.eventRegistrations_.push(eventRegistration);\n  };\n  /**\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n   */\n\n\n  View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\n    var cancelEvents = [];\n\n    if (cancelError) {\n      util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n      var path_1 = this.query_.path;\n      this.eventRegistrations_.forEach(function (registration) {\n        cancelError\n        /** @type {!Error} */\n        = cancelError;\n        var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n        if (maybeEvent) {\n          cancelEvents.push(maybeEvent);\n        }\n      });\n    }\n\n    if (eventRegistration) {\n      var remaining = [];\n\n      for (var i = 0; i < this.eventRegistrations_.length; ++i) {\n        var existing = this.eventRegistrations_[i];\n\n        if (!existing.matches(eventRegistration)) {\n          remaining.push(existing);\n        } else if (eventRegistration.hasAnyCallback()) {\n          // We're removing just this one\n          remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\n          break;\n        }\n      }\n\n      this.eventRegistrations_ = remaining;\n    } else {\n      this.eventRegistrations_ = [];\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n   *\r\n   * @param {!Operation} operation\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} completeServerCache\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\n    if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n      util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\n      util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\n    }\n\n    var oldViewCache = this.viewCache_;\n    var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\n    this.processor_.assertIndexed(result.viewCache);\n    util.assert(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n    this.viewCache_ = result.viewCache;\n    return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\n  };\n  /**\r\n   * @param {!EventRegistration} registration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.getInitialEvents = function (registration) {\n    var eventSnap = this.viewCache_.getEventCache();\n    var initialChanges = [];\n\n    if (!eventSnap.getNode().isLeafNode()) {\n      var eventNode = eventSnap.getNode();\n      eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        initialChanges.push(Change.childAddedChange(key, childNode));\n      });\n    }\n\n    if (eventSnap.isFullyInitialized()) {\n      initialChanges.push(Change.valueChange(eventSnap.getNode()));\n    }\n\n    return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\n  };\n  /**\r\n   * @private\r\n   * @param {!Array.<!Change>} changes\r\n   * @param {!Node} eventCache\r\n   * @param {EventRegistration=} eventRegistration\r\n   * @return {!Array.<!Event>}\r\n   */\n\n\n  View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\n    var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;\n    return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\n  };\n\n  return View;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor$1;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n    get: function get() {\n      util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\n      return __referenceConstructor$1;\n    },\n    set: function set(val) {\n      util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\n      __referenceConstructor$1 = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SyncPoint.prototype.isEmpty = function () {\n    return this.views.size === 0;\n  };\n\n  SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n    var e_1, _a;\n\n    var queryId = operation.source.queryId;\n\n    if (queryId !== null) {\n      var view = this.views.get(queryId);\n      util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\n      return view.applyOperation(operation, writesCache, optCompleteServerCache);\n    } else {\n      var events = [];\n\n      try {\n        for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var view = _c.value;\n          events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @param {!Query} query\r\n   * @param {!EventRegistration} eventRegistration\r\n   * @param {!WriteTreeRef} writesCache\r\n   * @param {?Node} serverCache Complete server cache, if we have it.\r\n   * @param {boolean} serverCacheComplete\r\n   * @return {!Array.<!Event>} Events to raise.\r\n   */\n\n\n  SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n    var queryId = query.queryIdentifier();\n    var view = this.views.get(queryId);\n\n    if (!view) {\n      // TODO: make writesCache take flag for complete server node\n      var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n      var eventCacheComplete = false;\n\n      if (eventCache) {\n        eventCacheComplete = true;\n      } else if (serverCache instanceof ChildrenNode) {\n        eventCache = writesCache.calcCompleteEventChildren(serverCache);\n        eventCacheComplete = false;\n      } else {\n        eventCache = ChildrenNode.EMPTY_NODE;\n        eventCacheComplete = false;\n      }\n\n      var viewCache = new ViewCache(new CacheNode(\n      /** @type {!Node} */\n      eventCache, eventCacheComplete, false), new CacheNode(\n      /** @type {!Node} */\n      serverCache, serverCacheComplete, false));\n      view = new View(query, viewCache);\n      this.views.set(queryId, view);\n    } // This is guaranteed to exist now, we just created anything that was missing\n\n\n    view.addEventRegistration(eventRegistration);\n    return view.getInitialEvents(eventRegistration);\n  };\n  /**\r\n   * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n   *\r\n   * If query is the default query, we'll check all views for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n   *\r\n   * @param {!Query} query\r\n   * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n   * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n   */\n\n\n  SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var e_2, _a;\n\n    var queryId = query.queryIdentifier();\n    var removed = [];\n    var cancelEvents = [];\n    var hadCompleteView = this.hasCompleteView();\n\n    if (queryId === 'default') {\n      try {\n        // When you do ref.off(...), we search all views for the registration to remove.\n        for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var _d = tslib.__read(_c.value, 2),\n              viewQueryId = _d[0],\n              view = _d[1];\n\n          cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n          if (view.isEmpty()) {\n            this.views.delete(viewQueryId); // We'll deal with complete views later.\n\n            if (!view.getQuery().getQueryParams().loadsAllData()) {\n              removed.push(view.getQuery());\n            }\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    } else {\n      // remove the callback from the specific view.\n      var view = this.views.get(queryId);\n\n      if (view) {\n        cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n\n        if (view.isEmpty()) {\n          this.views.delete(queryId); // We'll deal with complete views later.\n\n          if (!view.getQuery().getQueryParams().loadsAllData()) {\n            removed.push(view.getQuery());\n          }\n        }\n      }\n    }\n\n    if (hadCompleteView && !this.hasCompleteView()) {\n      // We removed our last complete view.\n      removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n    }\n\n    return {\n      removed: removed,\n      events: cancelEvents\n    };\n  };\n\n  SyncPoint.prototype.getQueryViews = function () {\n    var e_3, _a;\n\n    var result = [];\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (!view.getQuery().getQueryParams().loadsAllData()) {\n          result.push(view);\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return result;\n  };\n  /**\r\n   * @param path The path to the desired complete snapshot\r\n   * @return A complete cache, if it exists\r\n   */\n\n\n  SyncPoint.prototype.getCompleteServerCache = function (path) {\n    var e_4, _a;\n\n    var serverCache = null;\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        serverCache = serverCache || view.getCompleteServerCache(path);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return serverCache;\n  };\n\n  SyncPoint.prototype.viewForQuery = function (query) {\n    var params = query.getQueryParams();\n\n    if (params.loadsAllData()) {\n      return this.getCompleteView();\n    } else {\n      var queryId = query.queryIdentifier();\n      return this.views.get(queryId);\n    }\n  };\n\n  SyncPoint.prototype.viewExistsForQuery = function (query) {\n    return this.viewForQuery(query) != null;\n  };\n\n  SyncPoint.prototype.hasCompleteView = function () {\n    return this.getCompleteView() != null;\n  };\n\n  SyncPoint.prototype.getCompleteView = function () {\n    var e_5, _a;\n\n    try {\n      for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n\n        if (view.getQuery().getQueryParams().loadsAllData()) {\n          return view;\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return null;\n  };\n\n  return SyncPoint;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.prototype.addWrite = function (path, node) {\n    if (path.isEmpty()) {\n      return new CompoundWrite(new ImmutableTree(node));\n    } else {\n      var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n      if (rootmost != null) {\n        var rootMostPath = rootmost.path;\n        var value = rootmost.value;\n        var relativePath = Path.relativePath(rootMostPath, path);\n        value = value.updateChild(relativePath, node);\n        return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\n      } else {\n        var subtree = new ImmutableTree(node);\n        var newWriteTree = this.writeTree_.setTree(path, subtree);\n        return new CompoundWrite(newWriteTree);\n      }\n    }\n  };\n\n  CompoundWrite.prototype.addWrites = function (path, updates) {\n    var newWrite = this;\n    each(updates, function (childKey, node) {\n      newWrite = newWrite.addWrite(path.child(childKey), node);\n    });\n    return newWrite;\n  };\n  /**\r\n   * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n   * location, which must be removed by calling this method with that path.\r\n   *\r\n   * @param path The path at which a write and all deeper writes should be removed\r\n   * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n   */\n\n\n  CompoundWrite.prototype.removeWrite = function (path) {\n    if (path.isEmpty()) {\n      return CompoundWrite.Empty;\n    } else {\n      var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\n      return new CompoundWrite(newWriteTree);\n    }\n  };\n  /**\r\n   * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n   * considered \"complete\".\r\n   *\r\n   * @param path The path to check for\r\n   * @return Whether there is a complete write at that path\r\n   */\n\n\n  CompoundWrite.prototype.hasCompleteWrite = function (path) {\n    return this.getCompleteNode(path) != null;\n  };\n  /**\r\n   * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n   * writes from deeper paths, but will return child nodes from a more shallow path.\r\n   *\r\n   * @param path The path to get a complete write\r\n   * @return The node if complete at that path, or null otherwise.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteNode = function (path) {\n    var rootmost = this.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      return this.writeTree_.get(rootmost.path).getChild(Path.relativePath(rootmost.path, path));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Returns all children that are guaranteed to be a complete overwrite.\r\n   *\r\n   * @return A list of all complete children.\r\n   */\n\n\n  CompoundWrite.prototype.getCompleteChildren = function () {\n    var children = [];\n    var node = this.writeTree_.value;\n\n    if (node != null) {\n      // If it's a leaf node, it has no children; so nothing to do.\n      if (!node.isLeafNode()) {\n        node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n          children.push(new NamedNode(childName, childNode));\n        });\n      }\n    } else {\n      this.writeTree_.children.inorderTraversal(function (childName, childTree) {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      });\n    }\n\n    return children;\n  };\n\n  CompoundWrite.prototype.childCompoundWrite = function (path) {\n    if (path.isEmpty()) {\n      return this;\n    } else {\n      var shadowingNode = this.getCompleteNode(path);\n\n      if (shadowingNode != null) {\n        return new CompoundWrite(new ImmutableTree(shadowingNode));\n      } else {\n        return new CompoundWrite(this.writeTree_.subtree(path));\n      }\n    }\n  };\n  /**\r\n   * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n   * @return Whether this CompoundWrite is empty\r\n   */\n\n\n  CompoundWrite.prototype.isEmpty = function () {\n    return this.writeTree_.isEmpty();\n  };\n  /**\r\n   * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n   * node\r\n   * @param node The node to apply this CompoundWrite to\r\n   * @return The node with all writes applied\r\n   */\n\n\n  CompoundWrite.prototype.apply = function (node) {\n    return applySubtreeWrite(Path.Empty, this.writeTree_, node);\n  };\n\n  CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\n  return CompoundWrite;\n}();\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTree =\n/** @class */\nfunction () {\n  function WriteTree() {\n    /**\r\n     * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n     * applyLocally=false or writes that are completely shadowed by other writes.\r\n     *\r\n     * @type {!CompoundWrite}\r\n     * @private\r\n     */\n    this.visibleWrites_ = CompoundWrite.Empty;\n    /**\r\n     * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n     * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n     * used by transactions).\r\n     *\r\n     * @type {!Array.<!WriteRecord>}\r\n     * @private\r\n     */\n\n    this.allWrites_ = [];\n    this.lastWriteId_ = -1;\n  }\n  /**\r\n   * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTree.prototype.childWrites = function (path) {\n    return new WriteTreeRef(path, this);\n  };\n  /**\r\n   * Record a new overwrite from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Node} snap\r\n   * @param {!number} writeId\r\n   * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n   */\n\n\n  WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\n    util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\n\n    if (visible === undefined) {\n      visible = true;\n    }\n\n    this.allWrites_.push({\n      path: path,\n      snap: snap,\n      writeId: writeId,\n      visible: visible\n    });\n\n    if (visible) {\n      this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\n    }\n\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * Record a new merge from user code.\r\n   *\r\n   * @param {!Path} path\r\n   * @param {!Object.<string, !Node>} changedChildren\r\n   * @param {!number} writeId\r\n   */\n\n\n  WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\n    util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\n    this.allWrites_.push({\n      path: path,\n      children: changedChildren,\n      writeId: writeId,\n      visible: true\n    });\n    this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\n    this.lastWriteId_ = writeId;\n  };\n  /**\r\n   * @param {!number} writeId\r\n   * @return {?WriteRecord}\r\n   */\n\n\n  WriteTree.prototype.getWrite = function (writeId) {\n    for (var i = 0; i < this.allWrites_.length; i++) {\n      var record = this.allWrites_[i];\n\n      if (record.writeId === writeId) {\n        return record;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n   * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n   *\r\n   * @param {!number} writeId\r\n   * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n   * events as a result).\r\n   */\n\n\n  WriteTree.prototype.removeWrite = function (writeId) {\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n    // out of order.\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n    var _this = this;\n\n    var idx = this.allWrites_.findIndex(function (s) {\n      return s.writeId === writeId;\n    });\n    util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n    var writeToRemove = this.allWrites_[idx];\n    this.allWrites_.splice(idx, 1);\n    var removedWriteWasVisible = writeToRemove.visible;\n    var removedWriteOverlapsWithOtherWrites = false;\n    var i = this.allWrites_.length - 1;\n\n    while (removedWriteWasVisible && i >= 0) {\n      var currentWrite = this.allWrites_[i];\n\n      if (currentWrite.visible) {\n        if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {\n          // The removed write was completely shadowed by a subsequent write.\n          removedWriteWasVisible = false;\n        } else if (writeToRemove.path.contains(currentWrite.path)) {\n          // Either we're covering some writes or they're covering part of us (depending on which came first).\n          removedWriteOverlapsWithOtherWrites = true;\n        }\n      }\n\n      i--;\n    }\n\n    if (!removedWriteWasVisible) {\n      return false;\n    } else if (removedWriteOverlapsWithOtherWrites) {\n      // There's some shadowing going on. Just rebuild the visible writes from scratch.\n      this.resetTree_();\n      return true;\n    } else {\n      // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n      if (writeToRemove.snap) {\n        this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\n      } else {\n        var children = writeToRemove.children;\n        each(children, function (childName) {\n          _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\n        });\n      }\n\n      return true;\n    }\n  };\n  /**\r\n   * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n   * No server data is considered.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.getCompleteWriteData = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n   * writes), attempt to calculate a complete snapshot for the given path\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    if (!writeIdsToExclude && !includeHiddenWrites) {\n      var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\n\n      if (shadowingNode != null) {\n        return shadowingNode;\n      } else {\n        var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\n\n        if (subMerge.isEmpty()) {\n          return completeServerCache;\n        } else if (completeServerCache == null && !subMerge.hasCompleteWrite(Path.Empty)) {\n          // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n          return null;\n        } else {\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return subMerge.apply(layeredCache);\n        }\n      }\n    } else {\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n\n      if (!includeHiddenWrites && merge.isEmpty()) {\n        return completeServerCache;\n      } else {\n        // If the server cache is null, and we don't have a complete cache, we need to return null\n        if (!includeHiddenWrites && completeServerCache == null && !merge.hasCompleteWrite(Path.Empty)) {\n          return null;\n        } else {\n          var filter = function filter(write) {\n            return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (write.path.contains(treePath) || treePath.contains(write.path));\n          };\n\n          var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\n          var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n          return mergeAtPath.apply(layeredCache);\n        }\n      }\n    }\n  };\n  /**\r\n   * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n   * Used when creating new views, to pre-fill their complete event children snapshot.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\n    var completeChildren = ChildrenNode.EMPTY_NODE;\n    var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\n\n    if (topLevelSet) {\n      if (!topLevelSet.isLeafNode()) {\n        // we're shadowing everything. Return the children.\n        topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n          completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n        });\n      }\n\n      return completeChildren;\n    } else if (completeServerChildren) {\n      // Layer any children we have on top of this\n      // We know we don't have a top-level set, so just enumerate existing children\n      var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\n      completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        var node = merge_1.childCompoundWrite(new Path(childName)).apply(childNode);\n        completeChildren = completeChildren.updateImmediateChild(childName, node);\n      }); // Add any complete children we have from the set\n\n      merge_1.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    } else {\n      // We don't have anything to layer on top of. Layer on any children we have\n      // Note that we can return an empty snap if we have a defined delete\n      var merge = this.visibleWrites_.childCompoundWrite(treePath);\n      merge.getCompleteChildren().forEach(function (namedNode) {\n        completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n      });\n      return completeChildren;\n    }\n  };\n  /**\r\n   * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n   * applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!Path} childPath\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\n    util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n    var path = treePath.child(childPath);\n\n    if (this.visibleWrites_.hasCompleteWrite(path)) {\n      // At this point we can probably guarantee that we're in case 2, meaning no events\n      // May need to check visibility while doing the findRootMostValueAndPath call\n      return null;\n    } else {\n      // No complete shadowing. We're either partially shadowing or not shadowing at all.\n      var childMerge = this.visibleWrites_.childCompoundWrite(path);\n\n      if (childMerge.isEmpty()) {\n        // We're not shadowing at all. Case 1\n        return existingServerSnap.getChild(childPath);\n      } else {\n        // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n        // However this is tricky to find out, since user updates don't necessary change the server\n        // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n        // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n        // only check if the updates change the serverNode.\n        // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n        return childMerge.apply(existingServerSnap.getChild(childPath));\n      }\n    }\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!Path} treePath\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\n    var path = treePath.child(childKey);\n    var shadowingNode = this.visibleWrites_.getCompleteNode(path);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      if (existingServerSnap.isCompleteForChild(childKey)) {\n        var childMerge = this.visibleWrites_.childCompoundWrite(path);\n        return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   */\n\n\n  WriteTree.prototype.shadowingWrite = function (path) {\n    return this.visibleWrites_.getCompleteNode(path);\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window.\r\n   */\n\n\n  WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\n    var toIterate;\n    var merge = this.visibleWrites_.childCompoundWrite(treePath);\n    var shadowingNode = merge.getCompleteNode(Path.Empty);\n\n    if (shadowingNode != null) {\n      toIterate = shadowingNode;\n    } else if (completeServerData != null) {\n      toIterate = merge.apply(completeServerData);\n    } else {\n      // no children to iterate on\n      return [];\n    }\n\n    toIterate = toIterate.withIndex(index);\n\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n      var nodes = [];\n      var cmp = index.getCompare();\n      var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n      var next = iter.getNext();\n\n      while (next && nodes.length < count) {\n        if (cmp(next, startPost) !== 0) {\n          nodes.push(next);\n        }\n\n        next = iter.getNext();\n      }\n\n      return nodes;\n    } else {\n      return [];\n    }\n  };\n\n  WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\n    if (writeRecord.snap) {\n      return writeRecord.path.contains(path);\n    } else {\n      for (var childName in writeRecord.children) {\n        if (writeRecord.children.hasOwnProperty(childName) && writeRecord.path.child(childName).contains(path)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  };\n  /**\r\n   * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n   */\n\n\n  WriteTree.prototype.resetTree_ = function () {\n    this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\n\n    if (this.allWrites_.length > 0) {\n      this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\n    } else {\n      this.lastWriteId_ = -1;\n    }\n  };\n  /**\r\n   * The default filter used when constructing the tree. Keep everything that's visible.\r\n   */\n\n\n  WriteTree.DefaultFilter_ = function (write) {\n    return write.visible;\n  };\n  /**\r\n   * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n   * event data at that path.\r\n   */\n\n\n  WriteTree.layerTree_ = function (writes, filter, treeRoot) {\n    var compoundWrite = CompoundWrite.Empty;\n\n    for (var i = 0; i < writes.length; ++i) {\n      var write = writes[i]; // Theory, a later set will either:\n      // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n      // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n      if (filter(write)) {\n        var writePath = write.path;\n        var relativePath = void 0;\n\n        if (write.snap) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n            compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\n          }\n        } else if (write.children) {\n          if (treeRoot.contains(writePath)) {\n            relativePath = Path.relativePath(treeRoot, writePath);\n            compoundWrite = compoundWrite.addWrites(relativePath, write.children);\n          } else if (writePath.contains(treeRoot)) {\n            relativePath = Path.relativePath(writePath, treeRoot);\n\n            if (relativePath.isEmpty()) {\n              compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\n            } else {\n              var child = util.safeGet(write.children, relativePath.getFront());\n\n              if (child) {\n                // There exists a child in this node that matches the root path\n                var deepNode = child.getChild(relativePath.popFront());\n                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\n              }\n            }\n          }\n        } else {\n          throw util.assertionError('WriteRecord should have .snap or .children');\n        }\n      }\n    }\n\n    return compoundWrite;\n  };\n\n  return WriteTree;\n}();\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\n\n\nvar WriteTreeRef =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Path} path\r\n   * @param {!WriteTree} writeTree\r\n   */\n  function WriteTreeRef(path, writeTree) {\n    this.treePath_ = path;\n    this.writeTree_ = writeTree;\n  }\n  /**\r\n   * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n   * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n   * can lead to a more expensive calculation.\r\n   *\r\n   * @param {?Node} completeServerCache\r\n   * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n   * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n    return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n  };\n  /**\r\n   * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n   * mix of the given server data and write data.\r\n   *\r\n   * @param {?ChildrenNode} completeServerChildren\r\n   * @return {!ChildrenNode}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\n    return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\n  };\n  /**\r\n   * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n   * if anything, needs to be applied to the event cache.\r\n   *\r\n   * Possibilities:\r\n   *\r\n   * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n   *\r\n   * 2. Some write is completely shadowing. No events to be raised\r\n   *\r\n   * 3. Is partially shadowed. Events should be raised\r\n   *\r\n   * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n   *\r\n   * @param {!Path} path\r\n   * @param {?Node} existingEventSnap\r\n   * @param {?Node} existingServerSnap\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\n    return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\n  };\n  /**\r\n   * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n   * a higher path, this will return the child of that write relative to the write and this path.\r\n   * Returns null if there is no write at this path.\r\n   *\r\n   * @param {!Path} path\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.shadowingWrite = function (path) {\n    return this.writeTree_.shadowingWrite(this.treePath_.child(path));\n  };\n  /**\r\n   * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n   * the window, but may now be in the window\r\n   *\r\n   * @param {?Node} completeServerData\r\n   * @param {!NamedNode} startPost\r\n   * @param {!number} count\r\n   * @param {boolean} reverse\r\n   * @param {!Index} index\r\n   * @return {!Array.<!NamedNode>}\r\n   */\n\n\n  WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\n    return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\n  };\n  /**\r\n   * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n   * complete child for this ChildKey.\r\n   *\r\n   * @param {!string} childKey\r\n   * @param {!CacheNode} existingServerCache\r\n   * @return {?Node}\r\n   */\n\n\n  WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\n    return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\n  };\n  /**\r\n   * Return a WriteTreeRef for a child.\r\n   *\r\n   * @param {string} childName\r\n   * @return {!WriteTreeRef}\r\n   */\n\n\n  WriteTreeRef.prototype.child = function (childName) {\n    return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\n  };\n\n  return WriteTreeRef;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\n\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = ImmutableTree.Empty;\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = new WriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n  /**\r\n   * Apply the data changes for a user-generated set() or transaction() call.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\n    // Record pending write.\n    this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\n\n    if (!visible) {\n      return [];\n    } else {\n      return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\n    }\n  };\n  /**\r\n   * Apply the data from a user-generated update() call\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\n    // Record pending merge.\n    this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\n  };\n  /**\r\n   * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n   *\r\n   * @param revert True if the given write failed and needs to be reverted\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.ackUserWrite = function (writeId, revert) {\n    if (revert === void 0) {\n      revert = false;\n    }\n\n    var write = this.pendingWriteTree_.getWrite(writeId);\n    var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\n\n    if (!needToReevaluate) {\n      return [];\n    } else {\n      var affectedTree_1 = ImmutableTree.Empty;\n\n      if (write.snap != null) {\n        // overwrite\n        affectedTree_1 = affectedTree_1.set(Path.Empty, true);\n      } else {\n        each(write.children, function (pathString, node) {\n          affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\n        });\n      }\n\n      return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\n    }\n  };\n  /**\r\n   * Apply new server data for the specified path..\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerOverwrite = function (path, newData) {\n    return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\n  };\n  /**\r\n   * Apply new server data to be merged in at the specified path.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\n  };\n  /**\r\n   * Apply a listen complete for a query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyListenComplete = function (path) {\n    return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\n  };\n  /**\r\n   * Apply new server data for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey != null) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // Query must have been removed already\n      return [];\n    }\n  };\n  /**\r\n   * Apply server data to be merged in for the specified tagged query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var changeTree = ImmutableTree.fromObject(changedChildren);\n      var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Apply a listen complete for a tagged query\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\n    var queryKey = this.queryKeyForTag_(tag);\n\n    if (queryKey) {\n      var r = SyncTree.parseQueryKey_(queryKey);\n      var queryPath = r.path,\n          queryId = r.queryId;\n      var relativePath = Path.relativePath(queryPath, path);\n      var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\n      return this.applyTaggedOperation_(queryPath, op);\n    } else {\n      // We've already removed the query. No big deal, ignore the update\n      return [];\n    }\n  };\n  /**\r\n   * Add an event callback for the specified query.\r\n   *\r\n   * @return Events to raise.\r\n   */\n\n\n  SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\n    var path = query.path;\n    var serverCache = null;\n    var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n    this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n      var relativePath = Path.relativePath(pathToSyncPoint, path);\n      serverCache = serverCache || sp.getCompleteServerCache(relativePath);\n      foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();\n    });\n    var syncPoint = this.syncPointTree_.get(path);\n\n    if (!syncPoint) {\n      syncPoint = new SyncPoint();\n      this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\n    } else {\n      foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();\n      serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var serverCacheComplete;\n\n    if (serverCache != null) {\n      serverCacheComplete = true;\n    } else {\n      serverCacheComplete = false;\n      serverCache = ChildrenNode.EMPTY_NODE;\n      var subtree = this.syncPointTree_.subtree(path);\n      subtree.foreachChild(function (childName, childSyncPoint) {\n        var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\n\n        if (completeCache) {\n          serverCache = serverCache.updateImmediateChild(childName, completeCache);\n        }\n      });\n    }\n\n    var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\n\n    if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n      // We need to track a tag for this query\n      var queryKey = SyncTree.makeQueryKey_(query);\n      util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n      var tag = SyncTree.getNextQueryTag_();\n      this.queryToTagMap.set(queryKey, tag);\n      this.tagToQueryMap.set(tag, queryKey);\n    }\n\n    var writesCache = this.pendingWriteTree_.childWrites(path);\n    var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\n      var view\n      /** @type !View */\n      = syncPoint.viewForQuery(query);\n      events = events.concat(this.setupListener_(query, view));\n    }\n\n    return events;\n  };\n  /**\r\n   * Remove event callback(s).\r\n   *\r\n   * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n   * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n   *\r\n   * @param eventRegistration If null, all callbacks are removed.\r\n   * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n   * @return Cancel events, if cancelError was provided.\r\n   */\n\n\n  SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n    var _this = this; // Find the syncPoint first. Then deal with whether or not it has matching listeners\n\n\n    var path = query.path;\n    var maybeSyncPoint = this.syncPointTree_.get(path);\n    var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n    // not loadsAllData().\n\n    if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {\n      /**\r\n       * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n       */\n      var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\n\n      if (maybeSyncPoint.isEmpty()) {\n        this.syncPointTree_ = this.syncPointTree_.remove(path);\n      }\n\n      var removed = removedAndEvents.removed;\n      cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n      // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n      // properly set up.\n      //\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n\n      var removingDefault = -1 !== removed.findIndex(function (query) {\n        return query.getQueryParams().loadsAllData();\n      });\n      var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n        return parentSyncPoint.hasCompleteView();\n      });\n\n      if (removingDefault && !covered) {\n        var subtree = this.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          var newViews = this.collectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n          for (var i = 0; i < newViews.length; ++i) {\n            var view = newViews[i],\n                newQuery = view.getQuery();\n            var listener = this.createListenerForView_(view);\n            this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\n          }\n        }\n      } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          var defaultTag = null;\n          this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\n        } else {\n          removed.forEach(function (queryToRemove) {\n            var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\n\n            _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\n          });\n        }\n      } // Now, clear all of the tags we're tracking for the removed listens\n\n\n      this.removeTags_(removed);\n    }\n\n    return cancelEvents;\n  };\n  /**\r\n   * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n   * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n   * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n   *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n   *\r\n   * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n   *\r\n   * @param path The path to the data we want\r\n   * @param writeIdsToExclude A specific set to be excluded\r\n   */\n\n\n  SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\n    var includeHiddenSets = true;\n    var writeTree = this.pendingWriteTree_;\n    var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n      var relativePath = Path.relativePath(pathSoFar, path);\n      var serverCache = syncPoint.getCompleteServerCache(relativePath);\n\n      if (serverCache) {\n        return serverCache;\n      }\n    });\n    return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\n  };\n  /**\r\n   * This collapses multiple unfiltered views into a single view, since we only need a single\r\n   * listener for them.\r\n   */\n\n\n  SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n        var completeView = maybeChildSyncPoint.getCompleteView();\n        return [completeView];\n      } else {\n        // No complete view here, flatten any deeper listens into an array\n        var views_1 = [];\n\n        if (maybeChildSyncPoint) {\n          views_1 = maybeChildSyncPoint.getQueryViews();\n        }\n\n        each(childMap, function (_key, childViews) {\n          views_1 = views_1.concat(childViews);\n        });\n        return views_1;\n      }\n    });\n  };\n\n  SyncTree.prototype.removeTags_ = function (queries) {\n    for (var j = 0; j < queries.length; ++j) {\n      var removedQuery = queries[j];\n\n      if (!removedQuery.getQueryParams().loadsAllData()) {\n        // We should have a tag for this\n        var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\n        var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\n        this.queryToTagMap.delete(removedQueryKey);\n        this.tagToQueryMap.delete(removedQueryTag);\n      }\n    }\n  };\n  /**\r\n   * Normalizes a query to a query we send the server for listening\r\n   *\r\n   * @return The normalized query\r\n   */\n\n\n  SyncTree.queryForListening_ = function (query) {\n    if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n      // We treat queries that load all data as default queries\n      // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n      // from Query\n      return query.getRef();\n    } else {\n      return query;\n    }\n  };\n  /**\r\n   * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n   *\r\n   * @return This method can return events to support synchronous data sources\r\n   */\n\n\n  SyncTree.prototype.setupListener_ = function (query, view) {\n    var path = query.path;\n    var tag = this.tagForQuery_(query);\n    var listener = this.createListenerForView_(view);\n    var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\n    var subtree = this.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n    // may need to shadow other listens as well.\n\n    if (tag) {\n      util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\n    } else {\n      // Shadow everything at or below this location, this is a default listener.\n      var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n        if (!relativePath.isEmpty() && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\n          return [maybeChildSyncPoint.getCompleteView().getQuery()];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          var queries_1 = [];\n\n          if (maybeChildSyncPoint) {\n            queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {\n              return view.getQuery();\n            }));\n          }\n\n          each(childMap, function (_key, childQueries) {\n            queries_1 = queries_1.concat(childQueries);\n          });\n          return queries_1;\n        }\n      });\n\n      for (var i = 0; i < queriesToStop.length; ++i) {\n        var queryToStop = queriesToStop[i];\n        this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\n      }\n    }\n\n    return events;\n  };\n\n  SyncTree.prototype.createListenerForView_ = function (view) {\n    var _this = this;\n\n    var query = view.getQuery();\n    var tag = this.tagForQuery_(query);\n    return {\n      hashFn: function hashFn() {\n        var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\n        return cache.hash();\n      },\n      onComplete: function onComplete(status) {\n        if (status === 'ok') {\n          if (tag) {\n            return _this.applyTaggedListenComplete(query.path, tag);\n          } else {\n            return _this.applyListenComplete(query.path);\n          }\n        } else {\n          // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n          // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n          var error = errorForServerCode(status, query);\n          return _this.removeEventRegistration(query,\n          /*eventRegistration*/\n          null, error);\n        }\n      }\n    };\n  };\n  /**\r\n   * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n   */\n\n\n  SyncTree.makeQueryKey_ = function (query) {\n    return query.path.toString() + '$' + query.queryIdentifier();\n  };\n  /**\r\n   * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n   */\n\n\n  SyncTree.parseQueryKey_ = function (queryKey) {\n    var splitIndex = queryKey.indexOf('$');\n    util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n    return {\n      queryId: queryKey.substr(splitIndex + 1),\n      path: new Path(queryKey.substr(0, splitIndex))\n    };\n  };\n  /**\r\n   * Return the query associated with the given tag, if we have one\r\n   */\n\n\n  SyncTree.prototype.queryKeyForTag_ = function (tag) {\n    return this.tagToQueryMap.get(tag);\n  };\n  /**\r\n   * Return the tag associated with the given query.\r\n   */\n\n\n  SyncTree.prototype.tagForQuery_ = function (query) {\n    var queryKey = SyncTree.makeQueryKey_(query);\n    return this.queryToTagMap.get(queryKey);\n  };\n  /**\r\n   * Static accessor for query tags.\r\n   */\n\n\n  SyncTree.getNextQueryTag_ = function () {\n    return SyncTree.nextQueryTag_++;\n  };\n  /**\r\n   * A helper method to apply tagged operations\r\n   */\n\n\n  SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\n    var syncPoint = this.syncPointTree_.get(queryPath);\n    util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n    var writesCache = this.pendingWriteTree_.childWrites(queryPath);\n    return syncPoint.applyOperation(operation, writesCache,\n    /*serverCache=*/\n    null);\n  };\n  /**\r\n   * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n   *\r\n   * NOTES:\r\n   * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n   *\r\n   * - We call applyOperation() on each SyncPoint passing three things:\r\n   *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n   *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n   *   3. A snapshot Node with cached server data, if we have it.\r\n   *\r\n   * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n   */\n\n\n  SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\n    return this.applyOperationHelper_(operation, this.syncPointTree_,\n    /*serverCache=*/\n    null, this.pendingWriteTree_.childWrites(Path.Empty));\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    if (operation.path.isEmpty()) {\n      return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n    } else {\n      var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n      if (serverCache == null && syncPoint != null) {\n        serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n      }\n\n      var events = [];\n      var childName = operation.path.getFront();\n      var childOperation = operation.operationForChild(childName);\n      var childTree = syncPointTree.children.get(childName);\n\n      if (childTree && childOperation) {\n        var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n        var childWritesCache = writesCache.child(childName);\n        events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n\n      if (syncPoint) {\n        events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n      }\n\n      return events;\n    }\n  };\n  /**\r\n   * Recursive helper for applyOperationToSyncPoints_\r\n   */\n\n\n  SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\n    var _this = this;\n\n    var syncPoint = syncPointTree.get(Path.Empty); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPoint.getCompleteServerCache(Path.Empty);\n    }\n\n    var events = [];\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writesCache.child(childName);\n      var childOperation = operation.operationForChild(childName);\n\n      if (childOperation) {\n        events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n      }\n    });\n\n    if (syncPoint) {\n      events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\n    }\n\n    return events;\n  };\n  /**\r\n   * Static tracker for next query tag.\r\n   */\n\n\n  SyncTree.nextQueryTag_ = 1;\n  return SyncTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!util.contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return util.deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StatsManager =\n/** @class */\nfunction () {\n  function StatsManager() {}\n\n  StatsManager.getCollection = function (repoInfo) {\n    var hashString = repoInfo.toString();\n\n    if (!this.collections_[hashString]) {\n      this.collections_[hashString] = new StatsCollection();\n    }\n\n    return this.collections_[hashString];\n  };\n\n  StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\n    var hashString = repoInfo.toString();\n\n    if (!this.reporters_[hashString]) {\n      this.reporters_[hashString] = creatorFunction();\n    }\n\n    return this.reporters_[hashString];\n  };\n\n  StatsManager.collections_ = {};\n  StatsManager.reporters_ = {};\n  return StatsManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = tslib.__assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n/**\r\n * @constructor\r\n */\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  /**\r\n   * @param collection\r\n   * @param server_\r\n   */\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.includeStat = function (stat) {\n    this.statsToReport_[stat] = true;\n  };\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && util.contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    /**\r\n     * @private\r\n     * @type {!Array.<EventList>}\r\n     */\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     * @private\r\n     * @type {!number}\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n  /**\r\n   * @param {!Array.<Event>} eventDataList The new events to queue.\r\n   */\n\n\n  EventQueue.prototype.queueEvents = function (eventDataList) {\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n    var currList = null;\n\n    for (var i = 0; i < eventDataList.length; i++) {\n      var eventData = eventDataList[i];\n      var eventPath = eventData.getPath();\n\n      if (currList !== null && !eventPath.equals(currList.getPath())) {\n        this.eventLists_.push(currList);\n        currList = null;\n      }\n\n      if (currList === null) {\n        currList = new EventList(eventPath);\n      }\n\n      currList.add(eventData);\n    }\n\n    if (currList) {\n      this.eventLists_.push(currList);\n    }\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n   * for the specified path.\r\n   *\r\n   * It is assumed that the new events are all for the specified path.\r\n   *\r\n   * @param {!Path} path The path to raise events for.\r\n   * @param {!Array.<Event>} eventDataList The new events to raise.\r\n   */\n\n\n  EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.equals(path);\n    });\n  };\n  /**\r\n   * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n   * locations related to the specified change path (i.e. all ancestors and descendants).\r\n   *\r\n   * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n   *\r\n   * @param {!Path} changedPath The path to raise events for.\r\n   * @param {!Array.<!Event>} eventDataList The events to raise\r\n   */\n\n\n  EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n    this.queueEvents(eventDataList);\n    this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n      return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n    });\n  };\n  /**\r\n   * @param {!function(!Path):boolean} predicate\r\n   * @private\r\n   */\n\n\n  EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n    this.recursionDepth_++;\n    var sentAll = true;\n\n    for (var i = 0; i < this.eventLists_.length; i++) {\n      var eventList = this.eventLists_[i];\n\n      if (eventList) {\n        var eventPath = eventList.getPath();\n\n        if (predicate(eventPath)) {\n          this.eventLists_[i].raise();\n          this.eventLists_[i] = null;\n        } else {\n          sentAll = false;\n        }\n      }\n    }\n\n    if (sentAll) {\n      this.eventLists_ = [];\n    }\n\n    this.recursionDepth_--;\n  };\n\n  return EventQueue;\n}();\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\n\n\nvar EventList =\n/** @class */\nfunction () {\n  function EventList(path_) {\n    this.path_ = path_;\n    /**\r\n     * @type {!Array.<Event>}\r\n     * @private\r\n     */\n\n    this.events_ = [];\n  }\n  /**\r\n   * @param {!Event} eventData\r\n   */\n\n\n  EventList.prototype.add = function (eventData) {\n    this.events_.push(eventData);\n  };\n  /**\r\n   * Iterates through the list and raises each event\r\n   */\n\n\n  EventList.prototype.raise = function () {\n    for (var i = 0; i < this.events_.length; i++) {\n      var eventData = this.events_[i];\n\n      if (eventData !== null) {\n        this.events_[i] = null;\n        var eventFn = eventData.getEventRunner();\n\n        if (logger) {\n          log('event: ' + eventData.toString());\n        }\n\n        exceptionGuard(eventFn);\n      }\n    }\n  };\n  /**\r\n   * @return {!Path}\r\n   */\n\n\n  EventList.prototype.getPath = function () {\n    return this.path_;\n  };\n\n  return EventList;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!Array.<string>} allowedEvents_\r\n   */\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   * @param {!string} eventType\r\n   * @param {...*} varArgs\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = tslib.__spread(this.listeners_[eventType]);\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    util.assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @extends {EventEmitter}\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  tslib.__extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  tslib.__extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !util.isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n  /**\r\n   * @param {!string} eventType\r\n   * @return {Array.<boolean>}\r\n   */\n\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   * @param {number} requestNum\r\n   * @param {Array} data\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId An identifier for this connection, used for logging\r\n   * @param repoInfo The info for the endpoint to send data to.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfo.connectionURL(LONG_POLLING, params);\n    };\n  }\n  /**\r\n   *\r\n   * @param {function(Object)} onMessage Callback when messages arrive\r\n   * @param {function()} onDisconnect Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = tslib.__read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = tslib.__read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (util.isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param {!Object} data The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = util.stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = util.base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   * @param {!string} id\r\n   * @param {!string} pw\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (util.isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   * @param {*} args\r\n   * @private\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = util.stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!util.isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   * @private\r\n   * @return {Element}\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param {!string} id - The ID of this connection\r\n   * @param {!string} pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param {!string} url - The URL of the script tag.\r\n   * @param {!number} serial - The serial number of the request.\r\n   * @private\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param {!string} url - The URL for the script tag source.\r\n   * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (util.isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId identifier for this transport\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = StatsManager.getCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n  }\n  /**\r\n   * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n   * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n   * @return {string} connection url\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!util.isNodeSdk() && typeof location !== 'undefined' && location.href && location.href.indexOf(FORGE_DOMAIN) !== -1) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfo.connectionURL(WEBSOCKET, urlParams);\n  };\n  /**\r\n   *\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (util.isNodeSdk()) {\n        var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   * @return {boolean}\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = util.jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param {number} frameCount The number of frames we are expecting from the server\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @param {!String} data\r\n   * @return {?String} Any remaining data to be process, or null if there is none\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    util.assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param {Object} data The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = util.stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param {string} str String to send.\r\n   * @private\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   * @type {number}\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   * @type {number}\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    /**\r\n     * @const\r\n     * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n     */\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @param {!RepoInfo} repoInfo\r\n   * @private\r\n   */\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n   * initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n   * transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   * @private\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n  /**\r\n   * @return {!string}\r\n   * @private\r\n   */\n\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   *\r\n   * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   *\r\n   * @param {Object} handshake The handshake data returned from the server\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.updateHost(host); // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.updateHost(host); // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   *\r\n   * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n  /**\r\n   *\r\n   * @param {string} reason\r\n   * @private\r\n   */\n\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n  /**\r\n   *\r\n   * @private\r\n   */\n\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, ?string)} onComplete\r\n   * @param {string=} hash\r\n   */\n\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param {string} token The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {*} data\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n  /**\r\n   * @param {string} pathString\r\n   * @param {function(string, string)=} onComplete\r\n   */\n\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n  /**\r\n   * @param {Object.<string, *>} stats\r\n   */\n\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  tslib.__extends(PersistentConnection, _super);\n  /**\r\n   * @implements {ServerActions}\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param applicationId_ The Firebase App ID for this project\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    /** Map<path, Map<queryId, ListenSpec>> */\n\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !util.isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(util.stringify(msg));\n    util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query.queryIdentifier();\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    util.assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n    util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = util.safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        var indexPath = query.path.toString();\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || util.isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    util.assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + util.stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + util.stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function closeFn_1() {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function sendRequestFn(msg) {\n        util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (util.CONSTANTS.NODE_ADMIN) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (util.isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (util.CONSTANTS.NODE_ADMIN) {\n      clientName = 'admin_node';\n    } else if (util.CONSTANTS.NODE_CLIENT) {\n      clientName = 'node';\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (util.isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (util.isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return util.isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  tslib.__extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n   * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n   * @param {AuthTokenProvider} authTokenProvider_\r\n   * @implements {ServerActions}\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     *\r\n     * @private {!Object.<string, !Object>}\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n  /**\r\n   * @param {!Query} query\r\n   * @param {?number=} tag\r\n   * @return {string}\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n      return query.path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier()); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = query.getQueryParams().toRestQueryStringParameters();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (util.safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   *\r\n   * @param {!string} pathString\r\n   * @param {!Object.<string, *>} queryStringParameters\r\n   * @param {?function(?number, *=)} callback\r\n   * @private\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + util.querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = util.jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient, app, authTokenProvider) {\n    var _this = this;\n\n    this.repoInfo_ = repoInfo_;\n    this.app = app;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = new SparseSnapshotTree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null;\n    this.stats_ = StatsManager.getCollection(repoInfo_);\n\n    if (forceRestClient || beingCrawled()) {\n      this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n      setTimeout(this.onConnectStatus_.bind(this, true), 0);\n    } else {\n      var authOverride = app.options['databaseAuthVariableOverride']; // Validate authOverride\n\n      if (typeof authOverride !== 'undefined' && authOverride !== null) {\n        if (typeof authOverride !== 'object') {\n          throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n        }\n\n        try {\n          util.stringify(authOverride);\n        } catch (e) {\n          throw new Error('Invalid authOverride provided: ' + e);\n        }\n      }\n\n      this.persistentConnection_ = new PersistentConnection(this.repoInfo_, app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n      this.server_ = this.persistentConnection_;\n    }\n\n    authTokenProvider.addTokenChangeListener(function (token) {\n      _this.server_.refreshAuthToken(token);\n    }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n    this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () {\n      return new StatsReporter(_this.stats_, _this.server_);\n    });\n    this.transactionsInit_(); // Used for .info.\n\n    this.infoData_ = new SnapshotHolder();\n    this.infoSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        var infoEvents = [];\n\n        var node = _this.infoData_.getNode(query.path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n        // on initial data...\n\n\n        if (!node.isEmpty()) {\n          infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n          setTimeout(function () {\n            onComplete('ok');\n          }, 0);\n        }\n\n        return infoEvents;\n      },\n      stopListening: function stopListening() {}\n    });\n    this.updateInfo_('connected', false);\n    this.serverSyncTree_ = new SyncTree({\n      startListening: function startListening(query, tag, currentHashFn, onComplete) {\n        _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n          var events = onComplete(status, data);\n\n          _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n        }); // No synchronous events for network-backed sync trees\n\n\n        return [];\n      },\n      stopListening: function stopListening(query, tag) {\n        _this.server_.unlisten(query, tag);\n      }\n    });\n  }\n  /**\r\n   * @return The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n  /**\r\n   * @return The namespace represented by the repo.\r\n   */\n\n\n  Repo.prototype.name = function () {\n    return this.repoInfo_.namespace;\n  };\n  /**\r\n   * @return The time in milliseconds, taking the server offset into account if we have one.\r\n   */\n\n\n  Repo.prototype.serverTime = function () {\n    var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\n    var offset = offsetNode.val() || 0;\n    return new Date().getTime() + offset;\n  };\n  /**\r\n   * Generate ServerValues using some variables from the repo object.\r\n   */\n\n\n  Repo.prototype.generateServerValues = function () {\n    return generateWithValues({\n      timestamp: this.serverTime()\n    });\n  };\n  /**\r\n   * Called by realtime when we get new messages from the server.\r\n   */\n\n\n  Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n    // For testing.\n    this.dataUpdateCount++;\n    var path = new Path(pathString);\n    data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;\n    var events = [];\n\n    if (tag) {\n      if (isMerge) {\n        var taggedChildren = util.map(data, function (raw) {\n          return nodeFromJSON$1(raw);\n        });\n        events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n      } else {\n        var taggedSnap = nodeFromJSON$1(data);\n        events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n      }\n    } else if (isMerge) {\n      var changedChildren = util.map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n    } else {\n      var snap = nodeFromJSON$1(data);\n      events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n    }\n\n    var affectedPath = path;\n\n    if (events.length > 0) {\n      // Since we have a listener outstanding for each transaction, receiving any events\n      // is a proxy for some change having occurred.\n      affectedPath = this.rerunTransactions_(path);\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n  }; // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\n  Repo.prototype.interceptServerData_ = function (callback) {\n    this.interceptServerDataCallback_ = callback;\n  };\n\n  Repo.prototype.onConnectStatus_ = function (connectStatus) {\n    this.updateInfo_('connected', connectStatus);\n\n    if (connectStatus === false) {\n      this.runOnDisconnectEvents_();\n    }\n  };\n\n  Repo.prototype.onServerInfoUpdate_ = function (updates) {\n    var _this = this;\n\n    each(updates, function (key, value) {\n      _this.updateInfo_(key, value);\n    });\n  };\n\n  Repo.prototype.updateInfo_ = function (pathString, value) {\n    var path = new Path('/.info/' + pathString);\n    var newNode = nodeFromJSON$1(value);\n    this.infoData_.updateSnapshot(path, newNode);\n    var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n  };\n\n  Repo.prototype.getNextWriteId_ = function () {\n    return this.nextWriteId_++;\n  };\n\n  Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n    var _this = this;\n\n    this.log_('set', {\n      path: path.toString(),\n      value: newVal,\n      priority: newPriority\n    }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n    // (b) store unresolved paths on JSON parse\n\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n    var existing = this.serverSyncTree_.calcCompleteEventCache(path);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n    var writeId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n    this.eventQueue_.queueEvents(events);\n    this.server_.put(path.toString(), newNodeUnresolved.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n    var affectedPath = this.abortTransactions_(path);\n    this.rerunTransactions_(affectedPath); // We queued the events above, so just flush the queue here\n\n    this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n  };\n\n  Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    this.log_('update', {\n      path: path.toString(),\n      value: childrenToMerge\n    }); // Start with our existing data and merge each child into it.\n\n    var empty = true;\n    var serverValues = this.generateServerValues();\n    var changedChildren = {};\n    each(childrenToMerge, function (changedKey, changedValue) {\n      empty = false;\n      changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\n    });\n\n    if (!empty) {\n      var writeId_1 = this.getNextWriteId_();\n      var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n      this.eventQueue_.queueEvents(events);\n      this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n        var success = status === 'ok';\n\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n\n        var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n\n        _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n\n        _this.callOnCompleteCallback(onComplete, status, errorReason);\n      });\n      each(childrenToMerge, function (changedPath) {\n        var affectedPath = _this.abortTransactions_(path.child(changedPath));\n\n        _this.rerunTransactions_(affectedPath);\n      }); // We queued the events above, so just flush the queue here\n\n      this.eventQueue_.raiseEventsForChangedPath(path, []);\n    } else {\n      log(\"update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n    }\n  };\n  /**\r\n   * Applies all of the changes stored up in the onDisconnect_ tree.\r\n   */\n\n\n  Repo.prototype.runOnDisconnectEvents_ = function () {\n    var _this = this;\n\n    this.log_('onDisconnectEvents');\n    var serverValues = this.generateServerValues();\n    var resolvedOnDisconnectTree = new SparseSnapshotTree();\n    this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\n      var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\n      resolvedOnDisconnectTree.remember(path, resolved);\n    });\n    var events = [];\n    resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\n      events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n\n      var affectedPath = _this.abortTransactions_(path);\n\n      _this.rerunTransactions_(affectedPath);\n    });\n    this.onDisconnect_ = new SparseSnapshotTree();\n    this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\n  };\n\n  Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n    var _this = this;\n\n    this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.forget(path);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n    var _this = this;\n\n    var newNode = nodeFromJSON$1(value, priority);\n    this.server_.onDisconnectPut(path.toString(), newNode.val(\n    /*export=*/\n    true), function (status, errorReason) {\n      if (status === 'ok') {\n        _this.onDisconnect_.remember(path, newNode);\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n    var _this = this;\n\n    if (util.isEmpty(childrenToMerge)) {\n      log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n      this.callOnCompleteCallback(onComplete, 'ok');\n      return;\n    }\n\n    this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n      if (status === 'ok') {\n        each(childrenToMerge, function (childName, childNode) {\n          var newChildNode = nodeFromJSON$1(childNode);\n\n          _this.onDisconnect_.remember(path.child(childName), newChildNode);\n        });\n      }\n\n      _this.callOnCompleteCallback(onComplete, status, errorReason);\n    });\n  };\n\n  Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n    // a little bit by handling the return values anyways.\n    var events;\n\n    if (query.path.getFront() === '.info') {\n      events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n    } else {\n      events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n    }\n\n    this.eventQueue_.raiseEventsAtPath(query.path, events);\n  };\n\n  Repo.prototype.interrupt = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.interrupt(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.resume = function () {\n    if (this.persistentConnection_) {\n      this.persistentConnection_.resume(INTERRUPT_REASON);\n    }\n  };\n\n  Repo.prototype.stats = function (showDelta) {\n    if (showDelta === void 0) {\n      showDelta = false;\n    }\n\n    if (typeof console === 'undefined') {\n      return;\n    }\n\n    var stats;\n\n    if (showDelta) {\n      if (!this.statsListener_) {\n        this.statsListener_ = new StatsListener(this.stats_);\n      }\n\n      stats = this.statsListener_.get();\n    } else {\n      stats = this.stats_.get();\n    }\n\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n      return Math.max(currentValue.length, previousValue);\n    }, 0);\n    each(stats, function (stat, value) {\n      var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n      for (var i = stat.length; i < longestName + 2; i++) {\n        paddedStat += ' ';\n      }\n\n      console.log(paddedStat + value);\n    });\n  };\n\n  Repo.prototype.statsIncrementCounter = function (metric) {\n    this.stats_.incrementCounter(metric);\n    this.statsReporter_.includeStat(metric);\n  };\n\n  Repo.prototype.log_ = function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    var prefix = '';\n\n    if (this.persistentConnection_) {\n      prefix = this.persistentConnection_.id + ':';\n    }\n\n    log.apply(void 0, tslib.__spread([prefix], varArgs));\n  };\n\n  Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n    if (callback) {\n      exceptionGuard(function () {\n        if (status === 'ok') {\n          callback(null);\n        } else {\n          var code = (status || 'error').toUpperCase();\n          var message = code;\n\n          if (errorReason) {\n            message += ': ' + errorReason;\n          }\n\n          var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          error.code = code;\n          callback(error);\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(Repo.prototype, \"database\", {\n    get: function get() {\n      return this.__database || (this.__database = new Database(this));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Repo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n  /**\r\n   * @return {!NamedNode}\r\n   */\n\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n  /**\r\n   * @param {!NamedNode} node\r\n   * @return {boolean}\r\n   */\n\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n  /**\r\n   * @param {!QueryParams} params\r\n   * @return {!NamedNode}\r\n   * @private\r\n   */\n\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  /**\r\n   * @param {!QueryParams} params\r\n   */\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @param {!Node} snap\r\n   * @param {string} childKey\r\n   * @param {!Node} childSnap\r\n   * @param {!CompleteChildSource} source\r\n   * @param {?ChildChangeAccumulator} changeAccumulator\r\n   * @return {!Node}\r\n   * @private\r\n   */\n\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    util.assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n  /**\r\n   * @return {boolean} True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    util.assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    util.assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * @return {*}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    util.assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   * @return {!string}\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    util.assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   * @return {!number}\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    util.assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n  /**\r\n   * @return {!Index}\r\n   */\n\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n  /**\r\n   * @return {!QueryParams}\r\n   * @private\r\n   */\n\n\n  QueryParams.prototype.copy_ = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limit = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = '';\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToFirst = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n    return newParams;\n  };\n  /**\r\n   * @param {!number} newLimit\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.limitToLast = function (newLimit) {\n    var newParams = this.copy_();\n    newParams.limitSet_ = true;\n    newParams.limit_ = newLimit;\n    newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.startAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.startSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexStartValue_ = indexValue;\n\n    if (key != null) {\n      newParams.startNameSet_ = true;\n      newParams.indexStartName_ = key;\n    } else {\n      newParams.startNameSet_ = false;\n      newParams.indexStartName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {*} indexValue\r\n   * @param {?string=} key\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.endAt = function (indexValue, key) {\n    var newParams = this.copy_();\n    newParams.endSet_ = true;\n\n    if (indexValue === undefined) {\n      indexValue = null;\n    }\n\n    newParams.indexEndValue_ = indexValue;\n\n    if (key !== undefined) {\n      newParams.endNameSet_ = true;\n      newParams.indexEndName_ = key;\n    } else {\n      newParams.endNameSet_ = false;\n      newParams.indexEndName_ = '';\n    }\n\n    return newParams;\n  };\n  /**\r\n   * @param {!Index} index\r\n   * @return {!QueryParams}\r\n   */\n\n\n  QueryParams.prototype.orderBy = function (index) {\n    var newParams = this.copy_();\n    newParams.index_ = index;\n    return newParams;\n  };\n  /**\r\n   * @return {!Object}\r\n   */\n\n\n  QueryParams.prototype.getQueryObject = function () {\n    var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n    var obj = {};\n\n    if (this.startSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n\n      if (this.startNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n      }\n    }\n\n    if (this.endSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n\n      if (this.endNameSet_) {\n        obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n      }\n    }\n\n    if (this.limitSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n      var viewFrom = this.viewFrom_;\n\n      if (viewFrom === '') {\n        if (this.isViewFromLeft()) {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n        } else {\n          viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n        }\n      }\n\n      obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n    } // For now, priority index is the default, so we only specify if it's some other index\n\n\n    if (this.index_ !== PRIORITY_INDEX) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n    }\n\n    return obj;\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n  /**\r\n   * @return {boolean}\r\n   */\n\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n  /**\r\n   * @return {!NodeFilter}\r\n   */\n\n\n  QueryParams.prototype.getNodeFilter = function () {\n    if (this.loadsAllData()) {\n      return new IndexedFilter(this.getIndex());\n    } else if (this.hasLimit()) {\n      return new LimitedFilter(this);\n    } else {\n      return new RangedFilter(this);\n    }\n  };\n  /**\r\n   * Returns a set of REST query string parameters representing this query.\r\n   *\r\n   * @return {!Object.<string,*>} query string parameters\r\n   */\n\n\n  QueryParams.prototype.toRestQueryStringParameters = function () {\n    var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n    var qs = {};\n\n    if (this.isDefault()) {\n      return qs;\n    }\n\n    var orderBy;\n\n    if (this.index_ === PRIORITY_INDEX) {\n      orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n    } else if (this.index_ === VALUE_INDEX) {\n      orderBy = REST_CONSTANTS.VALUE_INDEX;\n    } else if (this.index_ === KEY_INDEX) {\n      orderBy = REST_CONSTANTS.KEY_INDEX;\n    } else {\n      util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\n      orderBy = this.index_.toString();\n    }\n\n    qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\n\n    if (this.startSet_) {\n      qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\n\n      if (this.startNameSet_) {\n        qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\n      }\n    }\n\n    if (this.endSet_) {\n      qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\n\n      if (this.endNameSet_) {\n        qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\n      }\n    }\n\n    if (this.limitSet_) {\n      if (this.isViewFromLeft()) {\n        qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n      } else {\n        qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n      }\n    }\n\n    return qs;\n  };\n  /**\r\n   * Wire Protocol Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n\n  QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n    INDEX_START_VALUE: 'sp',\n    INDEX_START_NAME: 'sn',\n    INDEX_END_VALUE: 'ep',\n    INDEX_END_NAME: 'en',\n    LIMIT: 'l',\n    VIEW_FROM: 'vf',\n    VIEW_FROM_LEFT: 'l',\n    VIEW_FROM_RIGHT: 'r',\n    INDEX: 'i'\n  };\n  /**\r\n   * REST Query Constants\r\n   * @const\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n  QueryParams.REST_QUERY_CONSTANTS_ = {\n    ORDER_BY: 'orderBy',\n    PRIORITY_INDEX: '$priority',\n    VALUE_INDEX: '$value',\n    KEY_INDEX: '$key',\n    START_AT: 'startAt',\n    END_AT: 'endAt',\n    LIMIT_TO_FIRST: 'limitToFirst',\n    LIMIT_TO_LAST: 'limitToLast'\n  };\n  /**\r\n   * Default, empty query parameters\r\n   * @type {!QueryParams}\r\n   * @const\r\n   */\n\n  QueryParams.DEFAULT = new QueryParams();\n  return QueryParams;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  tslib.__extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   *\r\n   * @param {!Repo} repo\r\n   * @param {(!Path)} path\r\n   * @extends {Query}\r\n   */\n\n\n  function Reference(repo, path) {\n    var _this = this;\n\n    if (!(repo instanceof Repo)) {\n      throw new Error('new Reference() no longer supported - use app.database().');\n    } // call Query's constructor, passing in the repo and path.\n\n\n    _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\n    return _this;\n  }\n  /** @return {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    util.validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (this.path.isEmpty()) {\n      return null;\n    } else {\n      return this.path.getBack();\n    }\n  };\n  /**\r\n   * @param {!(string|Path)} pathString\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.child = function (pathString) {\n    util.validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (this.path.getFront() === null) {\n        validateRootPathString('Reference.child', 1, pathString, false);\n      } else {\n        validatePathString('Reference.child', 1, pathString, false);\n      }\n    }\n\n    return new Reference(this.repo, this.path.child(pathString));\n  };\n  /** @return {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    util.validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parentPath = this.path.parent();\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  };\n  /** @return {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    util.validateArgCount('Reference.root', 0, 0, arguments.length);\n    var ref = this;\n\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n\n    return ref;\n  };\n  /** @return {!Database} */\n\n\n  Reference.prototype.databaseProp = function () {\n    return this.repo.database;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    util.validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    util.validateCallback('Reference.set', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path, newVal,\n    /*priority=*/\n    null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {!Object} objectToMerge\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.update = function (objectToMerge, onComplete) {\n    util.validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n    util.validateCallback('Reference.update', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*} newVal\r\n   * @param {string|number|null} newPriority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.remove = function (onComplete) {\n    util.validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    util.validateCallback('Reference.remove', 1, onComplete, true);\n    return this.set(null, onComplete);\n  };\n  /**\r\n   * @param {function(*):*} transactionUpdate\r\n   * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n   * @param {boolean=} applyLocally\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    util.validateCallback('Reference.transaction', 2, onComplete, true); // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    if (applyLocally === undefined) {\n      applyLocally = true;\n    }\n\n    var deferred = new util.Deferred();\n\n    if (typeof onComplete === 'function') {\n      deferred.promise.catch(function () {});\n    }\n\n    var promiseComplete = function promiseComplete(error, committed, snapshot) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n\n    this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\n    return deferred.promise;\n  };\n  /**\r\n   * @param {string|number|null} priority\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Promise}\r\n   */\n\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    util.validateCallback('Reference.setPriority', 2, onComplete, true);\n    var deferred = new util.Deferred();\n    this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n  /**\r\n   * @param {*=} value\r\n   * @param {function(?Error)=} onComplete\r\n   * @return {!Reference}\r\n   */\n\n\n  Reference.prototype.push = function (value, onComplete) {\n    util.validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    util.validateCallback('Reference.push', 2, onComplete, true);\n    var now = this.repo.serverTime();\n    var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n\n    var thennablePushRef = this.child(name);\n    var pushRef = this.child(name);\n    var promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise.catch(function () {});\n    }\n\n    return thennablePushRef;\n  };\n  /**\r\n   * @return {!OnDisconnect}\r\n   */\n\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  };\n\n  Object.defineProperty(Reference.prototype, \"database\", {\n    get: function get() {\n      return this.databaseProp();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nQuery.__referenceConstructor = Reference;\nSyncPoint.__referenceConstructor = Reference;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Node in a Tree.\r\n */\n\nvar TreeNode =\n/** @class */\nfunction () {\n  function TreeNode() {\n    // TODO: Consider making accessors that create children and value lazily or\n    // separate Internal / Leaf 'types'.\n    this.children = {};\n    this.childCount = 0;\n    this.value = null;\n  }\n\n  return TreeNode;\n}();\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @template T\r\n   * @param {string=} name_ Optional name of the node.\r\n   * @param {Tree=} parent_ Optional parent node.\r\n   * @param {TreeNode=} node_ Optional node to wrap.\r\n   */\n  function Tree(name_, parent_, node_) {\n    if (name_ === void 0) {\n      name_ = '';\n    }\n\n    if (parent_ === void 0) {\n      parent_ = null;\n    }\n\n    if (node_ === void 0) {\n      node_ = new TreeNode();\n    }\n\n    this.name_ = name_;\n    this.parent_ = parent_;\n    this.node_ = node_;\n  }\n  /**\r\n   * Returns a sub-Tree for the given path.\r\n   *\r\n   * @param {!(string|Path)} pathObj Path to look up.\r\n   * @return {!Tree.<T>} Tree for path.\r\n   */\n\n\n  Tree.prototype.subTree = function (pathObj) {\n    // TODO: Require pathObj to be Path?\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n    var child = this,\n        next = path.getFront();\n\n    while (next !== null) {\n      var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\n      child = new Tree(next, child, childNode);\n      path = path.popFront();\n      next = path.getFront();\n    }\n\n    return child;\n  };\n  /**\r\n   * Returns the data associated with this tree node.\r\n   *\r\n   * @return {?T} The data or null if no data exists.\r\n   */\n\n\n  Tree.prototype.getValue = function () {\n    return this.node_.value;\n  };\n  /**\r\n   * Sets data to this tree node.\r\n   *\r\n   * @param {!T} value Value to set.\r\n   */\n\n\n  Tree.prototype.setValue = function (value) {\n    util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\n    this.node_.value = value;\n    this.updateParents_();\n  };\n  /**\r\n   * Clears the contents of the tree node (its value and all children).\r\n   */\n\n\n  Tree.prototype.clear = function () {\n    this.node_.value = null;\n    this.node_.children = {};\n    this.node_.childCount = 0;\n    this.updateParents_();\n  };\n  /**\r\n   * @return {boolean} Whether the tree has any children.\r\n   */\n\n\n  Tree.prototype.hasChildren = function () {\n    return this.node_.childCount > 0;\n  };\n  /**\r\n   * @return {boolean} Whether the tree is empty (no value or children).\r\n   */\n\n\n  Tree.prototype.isEmpty = function () {\n    return this.getValue() === null && !this.hasChildren();\n  };\n  /**\r\n   * Calls action for each child of this tree node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachChild = function (action) {\n    var _this = this;\n\n    each(this.node_.children, function (child, childTree) {\n      action(new Tree(child, _this, childTree));\n    });\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n   *   false.\r\n   * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n   *   parent.\r\n   */\n\n\n  Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\n    if (includeSelf && !childrenFirst) {\n      action(this);\n    }\n\n    this.forEachChild(function (child) {\n      child.forEachDescendant(action,\n      /*includeSelf=*/\n      true, childrenFirst);\n    });\n\n    if (includeSelf && childrenFirst) {\n      action(this);\n    }\n  };\n  /**\r\n   * Calls action on each ancestor node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n   *   true to abort.\r\n   * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n   * @return {boolean} true if the action callback returned true.\r\n   */\n\n\n  Tree.prototype.forEachAncestor = function (action, includeSelf) {\n    var node = includeSelf ? this : this.parent();\n\n    while (node !== null) {\n      if (action(node)) {\n        return true;\n      }\n\n      node = node.parent();\n    }\n\n    return false;\n  };\n  /**\r\n   * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n   * is found, action is called on it and traversal does not continue inside the node.\r\n   * Action is *not* called on this node.\r\n   *\r\n   * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n   */\n\n\n  Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\n    this.forEachChild(function (child) {\n      if (child.getValue() !== null) {\n        action(child);\n      } else {\n        child.forEachImmediateDescendantWithValue(action);\n      }\n    });\n  };\n  /**\r\n   * @return {!Path} The path of this tree node, as a Path.\r\n   */\n\n\n  Tree.prototype.path = function () {\n    return new Path(this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);\n  };\n  /**\r\n   * @return {string} The name of the tree node.\r\n   */\n\n\n  Tree.prototype.name = function () {\n    return this.name_;\n  };\n  /**\r\n   * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n   */\n\n\n  Tree.prototype.parent = function () {\n    return this.parent_;\n  };\n  /**\r\n   * Adds or removes this child from its parent based on whether it's empty or not.\r\n   *\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateParents_ = function () {\n    if (this.parent_ !== null) {\n      this.parent_.updateChild_(this.name_, this);\n    }\n  };\n  /**\r\n   * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n   *\r\n   * @param {string} childName The name of the child to update.\r\n   * @param {!Tree.<T>} child The child to update.\r\n   * @private\r\n   */\n\n\n  Tree.prototype.updateChild_ = function (childName, child) {\n    var childEmpty = child.isEmpty();\n    var childExists = util.contains(this.node_.children, childName);\n\n    if (childEmpty && childExists) {\n      delete this.node_.children[childName];\n      this.node_.childCount--;\n      this.updateParents_();\n    } else if (!childEmpty && !childExists) {\n      this.node_.children[childName] = child.node_;\n      this.node_.childCount++;\n      this.updateParents_();\n    }\n  };\n\n  return Tree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\n// For now it's part of Repo, but in its own file.\n\n/**\r\n * @enum {number}\r\n */\n\n\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\"; // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n\n  TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\"; // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n\n  TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\"; // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n\n  TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\"; // Temporary state used to mark transactions that need to be aborted.\n\n  TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\n})(TransactionStatus || (TransactionStatus = {}));\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nRepo.prototype.transactionsInit_ = function () {\n  /**\r\n   * Stores queues of outstanding transactions for Firebase locations.\r\n   *\r\n   * @type {!Tree.<Array.<!Transaction>>}\r\n   * @private\r\n   */\n  this.transactionQueueTree_ = new Tree();\n};\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\n\n\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\n  this.log_('transaction on ' + path); // Add a watch to make sure we get server updates.\n\n  var valueCallback = function valueCallback() {};\n\n  var watchRef = new Reference(this, path);\n  watchRef.on('value', valueCallback);\n\n  var unwatcher = function unwatcher() {\n    watchRef.off('value', valueCallback);\n  }; // Initialize transaction.\n\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = this.getLatestState_(path);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      // We just set the input snapshot, so this cast should be safe\n      var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\n      transaction.onComplete(null, false, snapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = TransactionStatus.RUN;\n    var queueNode = this.transactionQueueTree_.subTree(path);\n    var nodeQueue = queueNode.getValue() || [];\n    nodeQueue.push(transaction);\n    queueNode.setValue(nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our transaction state, since the user could\n    // start new transactions from the event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && util.contains(newVal, '.priority')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = util.safeGet(newVal, '.priority');\n      util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    priorityForNode\n    /** @type {null|number|string} */\n    = priorityForNode;\n    var serverValues = this.generateServerValues();\n    var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = this.getNextWriteId_();\n    var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    this.sendReadyTransactions_();\n  }\n};\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\n  return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || ChildrenNode.EMPTY_NODE;\n};\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.sendReadyTransactions_ = function (node) {\n  var _this = this;\n\n  if (node === void 0) {\n    node = this.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    this.pruneCompletedTransactionsBelowNode_(node);\n  }\n\n  if (node.getValue() !== null) {\n    var queue = this.buildTransactionQueue_(node);\n    util.assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === TransactionStatus.RUN;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      this.sendTransactionQueue_(node.path(), queue);\n    }\n  } else if (node.hasChildren()) {\n    node.forEachChild(function (childNode) {\n      _this.sendReadyTransactions_(childNode);\n    });\n  }\n};\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\n  var _this = this; // Mark transactions as sent and increment retry count!\n\n\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = this.getLatestState_(path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    var relativePath = Path.relativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /** @type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  this.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    _this.log_('transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n      // the callback could trigger more transactions or sets.\n      var callbacks = [];\n\n      for (var i = 0; i < queue.length; i++) {\n        queue[i].status = TransactionStatus.COMPLETED;\n        events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this transaction is complete, it should be set\n          var node = queue[i].currentOutputSnapshotResolved;\n          var ref = new Reference(_this, queue[i].path);\n          var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n        }\n\n        queue[i].unwatcher();\n      } // Now remove the completed transactions.\n\n\n      _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path)); // There may be pending transactions that we can now send.\n\n\n      _this.sendReadyTransactions_();\n\n      _this.eventQueue_.raiseEventsForChangedPath(path, events); // Finally, trigger onComplete callbacks.\n\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n          } else {\n            queue[i].status = TransactionStatus.RUN;\n          }\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.NEEDS_ABORT;\n          queue[i].abortReason = status;\n        }\n      }\n\n      _this.rerunTransactions_(path);\n    }\n  }, latestHash);\n};\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.rerunTransactions_ = function (changedPath) {\n  var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\n  var path = rootMostTransactionNode.path();\n  var queue = this.buildTransactionQueue_(rootMostTransactionNode);\n  this.rerunTransactionQueue_(queue, path);\n  return path;\n};\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n  // the callback could trigger more transactions or sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === TransactionStatus.RUN;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  for (var i = 0; i < queue.length; i++) {\n    var transaction = queue[i];\n    var relativePath = Path.relativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason = void 0;\n    util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n    } else if (transaction.status === TransactionStatus.RUN) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n      } else {\n        // This code reruns a transaction\n        var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\n        transaction.currentInputSnapshot = currentNode;\n        var newData = queue[i].update(currentNode.val());\n\n        if (newData !== undefined) {\n          validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n          var newDataNode = nodeFromJSON$1(newData);\n          var hasExplicitPriority = typeof newData === 'object' && newData != null && util.contains(newData, '.priority');\n\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          var oldWriteId = transaction.currentWriteId;\n          var serverValues = this.generateServerValues();\n          var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = this.getNextWriteId_(); // Mutates setsToIgnore in place\n\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n          events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\n        }\n      }\n    }\n\n    this.eventQueue_.raiseEventsForChangedPath(path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED; // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\n      // So defer the unwatcher until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          var ref = new Reference(this, queue[i].path); // We set this field immediately, so it's safe to cast to an actual snapshot\n\n          var lastInput\n          /** @type {!Node} */\n          = queue[i].currentInputSnapshot;\n          var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n        } else {\n          callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n        }\n      }\n    }\n  } // Clean up completed transactions.\n\n\n  this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  this.sendReadyTransactions_();\n};\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\n\n  var transactionNode = this.transactionQueueTree_;\n  front = path.getFront();\n\n  while (front !== null && transactionNode.getValue() === null) {\n    transactionNode = transactionNode.subTree(front);\n    path = path.popFront();\n    front = path.getFront();\n  }\n\n  return transactionNode;\n};\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n};\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\n  var _this = this;\n\n  var nodeQueue = node.getValue();\n\n  if (nodeQueue !== null) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  node.forEachChild(function (child) {\n    _this.aggregateTransactionQueuesForNode_(child, queue);\n  });\n};\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\n  var _this = this;\n\n  var queue = node.getValue();\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n\n    queue.length = to;\n    node.setValue(queue.length > 0 ? queue : null);\n  }\n\n  node.forEachChild(function (childNode) {\n    _this.pruneCompletedTransactionsBelowNode_(childNode);\n  });\n};\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.abortTransactions_ = function (path) {\n  var _this = this;\n\n  var affectedPath = this.getAncestorTransactionNode_(path).path();\n  var transactionNode = this.transactionQueueTree_.subTree(path);\n  transactionNode.forEachAncestor(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  this.abortTransactionsOnNode_(transactionNode);\n  transactionNode.forEachDescendant(function (node) {\n    _this.abortTransactionsOnNode_(node);\n  });\n  return affectedPath;\n};\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\n  var queue = node.getValue();\n\n  if (queue !== null) {\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\n    // the callback could trigger more transactions or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\n    // can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;else if (queue[i].status === TransactionStatus.SENT) {\n        util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n        lastSent = i; // Mark transaction for abort when it comes back.\n\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          var snapshot = null;\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      node.setValue(null);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(app_, authProvider_) {\n    var _this = this;\n\n    this.app_ = app_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.get().then(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n  /**\r\n   * @param {boolean} forceRefresh\r\n   * @return {!Promise<FirebaseAuthTokenData>}\r\n   */\n\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(function () {\n        return listener(null);\n      }, 0);\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.app_.options) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\n\n\nvar EmulatorAdminTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorAdminTokenProvider() {}\n\n  EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  };\n\n  EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  };\n\n  EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () {};\n\n  EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\n  return EmulatorAdminTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** @const {string} */\n\n\nvar DATABASE_URL_OPTION = 'databaseURL';\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\nvar _staticInstance;\n/**\r\n * Creates and caches Repo instances.\r\n */\n\n\nvar RepoManager =\n/** @class */\nfunction () {\n  function RepoManager() {\n    /**\r\n     * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n     */\n    this.repos_ = {};\n    /**\r\n     * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n     * @private {boolean}\r\n     */\n\n    this.useRestClient_ = false;\n  }\n\n  RepoManager.getInstance = function () {\n    if (!_staticInstance) {\n      _staticInstance = new RepoManager();\n    }\n\n    return _staticInstance;\n  }; // TODO(koss): Remove these functions unless used in tests?\n\n\n  RepoManager.prototype.interrupt = function () {\n    var e_1, _a, e_2, _b;\n\n    try {\n      for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].interrupt();\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  RepoManager.prototype.resume = function () {\n    var e_3, _a, e_4, _b;\n\n    try {\n      for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var appName = _d.value;\n\n        try {\n          for (var _e = (e_4 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dbUrl = _f.value;\n            this.repos_[appName][dbUrl].resume();\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n  /**\r\n   * This function should only ever be called to CREATE a new database instance.\r\n   *\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Database}\r\n   */\n\n\n  RepoManager.prototype.databaseFromApp = function (app, authProvider, url) {\n    var dbUrl = url || app.options[DATABASE_URL_OPTION];\n\n    if (dbUrl === undefined) {\n      fatal(\"Can't determine Firebase Database URL.  Be sure to include \" + DATABASE_URL_OPTION + ' option when calling firebase.initializeApp().');\n    }\n\n    var parsedUrl = parseRepoInfo(dbUrl);\n    var repoInfo = parsedUrl.repoInfo;\n    var isEmulator;\n    var dbEmulatorHost = undefined;\n\n    if (typeof process !== 'undefined') {\n      dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n    }\n\n    if (dbEmulatorHost) {\n      isEmulator = true;\n      dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n      parsedUrl = parseRepoInfo(dbUrl);\n      repoInfo = parsedUrl.repoInfo;\n    } else {\n      isEmulator = !parsedUrl.repoInfo.secure;\n    }\n\n    var authTokenProvider = util.CONSTANTS.NODE_ADMIN && isEmulator ? new EmulatorAdminTokenProvider() : new FirebaseAuthTokenProvider(app, authProvider);\n    validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n\n    if (!parsedUrl.path.isEmpty()) {\n      fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n    }\n\n    var repo = this.createRepo(repoInfo, app, authTokenProvider);\n    return repo.database;\n  };\n  /**\r\n   * Remove the repo and make sure it is disconnected.\r\n   *\r\n   * @param {!Repo} repo\r\n   */\n\n\n  RepoManager.prototype.deleteRepo = function (repo) {\n    var appRepos = util.safeGet(this.repos_, repo.app.name); // This should never happen...\n\n    if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\n      fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n    }\n\n    repo.interrupt();\n    delete appRepos[repo.repoInfo_.toURLString()];\n  };\n  /**\r\n   * Ensures a repo doesn't already exist and then creates one using the\r\n   * provided app.\r\n   *\r\n   * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n   * @param {!FirebaseApp} app\r\n   * @return {!Repo} The Repo object for the specified server / repoName.\r\n   */\n\n\n  RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\n    var appRepos = util.safeGet(this.repos_, app.name);\n\n    if (!appRepos) {\n      appRepos = {};\n      this.repos_[app.name] = appRepos;\n    }\n\n    var repo = util.safeGet(appRepos, repoInfo.toURLString());\n\n    if (repo) {\n      fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n    }\n\n    repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\n    appRepos[repoInfo.toURLString()] = repo;\n    return repo;\n  };\n  /**\r\n   * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n   * @param {boolean} forceRestClient\r\n   */\n\n\n  RepoManager.prototype.forceRestClient = function (forceRestClient) {\n    this.useRestClient_ = forceRestClient;\n  };\n\n  return RepoManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   * @param {!Repo} repo_\r\n   */\n  function Database(repo_) {\n    this.repo_ = repo_;\n\n    if (!(repo_ instanceof Repo)) {\n      fatal(\"Don't call new Database() directly - please use firebase.database().\");\n    }\n    /** @type {Reference} */\n\n\n    this.root_ = new Reference(repo_, Path.Empty);\n    this.INTERNAL = new DatabaseInternals(this);\n  }\n\n  Object.defineProperty(Database.prototype, \"app\", {\n    get: function get() {\n      return this.repo_.app;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Database.prototype.ref = function (path) {\n    this.checkDeleted_('ref');\n    util.validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @param {string} url\r\n   * @return {!Reference} Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    /** @const {string} */\n    var apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    util.validateArgCount(apiName, 1, 1, arguments.length);\n    var parsedURL = parseRepoInfo(url);\n    validateUrl(apiName, 1, parsedURL);\n    var repoInfo = parsedURL.repoInfo;\n\n    if (repoInfo.host !== this.repo_.repoInfo_.host) {\n      fatal(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n    }\n\n    return this.ref(parsedURL.path.toString());\n  };\n  /**\r\n   * @param {string} apiName\r\n   */\n\n\n  Database.prototype.checkDeleted_ = function (apiName) {\n    if (this.repo_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    util.validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    this.repo_.interrupt();\n  };\n\n  Database.prototype.goOnline = function () {\n    util.validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    this.repo_.resume();\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    increment: function increment(delta) {\n      return {\n        '.sv': {\n          'increment': delta\n        }\n      };\n    }\n  };\n  return Database;\n}();\n\nvar DatabaseInternals =\n/** @class */\nfunction () {\n  /** @param {!Database} database */\n  function DatabaseInternals(database) {\n    this.database = database;\n  }\n  /** @return {Promise<void>} */\n\n\n  DatabaseInternals.prototype.delete = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      return tslib.__generator(this, function (_a) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.database.checkDeleted_('delete'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        RepoManager.getInstance().deleteRepo(this.database.repo_); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        this.database.repo_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        this.database.root_ = null;\n        this.database.INTERNAL = null;\n        this.database = null;\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  return DatabaseInternals;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  ref.repo.stats(showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  ref.repo.statsIncrementCounter(metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref.repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return ref.repo.interceptServerData_(callback);\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection;\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n};\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\n\n\nvar ConnectionTarget = RepoInfo;\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query.queryIdentifier();\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  RepoManager.getInstance().forceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\nvar name = \"@firebase/database\";\nvar version = \"0.6.9\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new component.Component('database', function (container, url) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (util.isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;","import '@firebase/database';"],"sourceRoot":""}